2024-11-14T11:47:21.328+02:00  INFO 12947 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 12947 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T11:47:21.348+02:00  INFO 12947 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T11:47:23.497+02:00  INFO 12947 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T11:47:23.663+02:00  INFO 12947 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 139 ms. Found 3 JPA repository interfaces.
2024-11-14T11:47:25.015+02:00  INFO 12947 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T11:47:25.036+02:00  INFO 12947 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T11:47:25.037+02:00  INFO 12947 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T11:47:25.121+02:00  INFO 12947 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T11:47:25.124+02:00  INFO 12947 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3630 ms
2024-11-14T11:47:25.661+02:00  INFO 12947 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T11:47:25.756+02:00  INFO 12947 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T11:47:25.804+02:00  INFO 12947 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T11:47:26.171+02:00  INFO 12947 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T11:47:26.207+02:00  INFO 12947 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T11:47:26.373+02:00  INFO 12947 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@2db3675a
2024-11-14T11:47:26.375+02:00  INFO 12947 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T11:47:27.620+02:00  INFO 12947 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T11:47:27.664+02:00 DEBUG 12947 --- [moviedb-api] [main] org.hibernate.SQL                        : 
    create table actor (
        id integer,
        birth_date date not null,
        name varchar(255) not null,
        primary key (id)
    )
2024-11-14T11:47:27.684+02:00 DEBUG 12947 --- [moviedb-api] [main] org.hibernate.SQL                        : 
    create table genre (
        id integer,
        name varchar(255) not null,
        primary key (id)
    )
2024-11-14T11:47:27.704+02:00 DEBUG 12947 --- [moviedb-api] [main] org.hibernate.SQL                        : 
    create table movie (
        id integer,
        duration integer not null,
        release_year integer not null,
        title varchar(255) not null,
        primary key (id)
    )
2024-11-14T11:47:27.716+02:00 DEBUG 12947 --- [moviedb-api] [main] org.hibernate.SQL                        : 
    create table movie_actor (
        movie_id bigint not null,
        actor_id bigint not null,
        primary key (movie_id, actor_id)
    )
2024-11-14T11:47:27.724+02:00 DEBUG 12947 --- [moviedb-api] [main] org.hibernate.SQL                        : 
    create table movie_genre (
        movie_id bigint not null,
        genre_id bigint not null,
        primary key (movie_id, genre_id)
    )
2024-11-14T11:47:27.735+02:00  INFO 12947 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T11:47:28.168+02:00  INFO 12947 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T11:47:29.282+02:00  WARN 12947 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T11:47:30.953+02:00  INFO 12947 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T11:47:31.062+02:00  INFO 12947 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T11:47:31.093+02:00  INFO 12947 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 10.288 seconds (process running for 11.114)
2024-11-14T11:47:33.424+02:00  INFO 12947 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T11:47:33.425+02:00  INFO 12947 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T11:47:33.431+02:00  INFO 12947 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-14T11:47:58.714+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=null, genres=null, actorIds=null, genreIds=null)
2024-11-14T11:47:58.735+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=null, genres=null, actorIds=null, genreIds=null)
2024-11-14T11:47:58.914+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id 
    from
        movie m1_0 
    where
        m1_0.title=? 
        and m1_0.release_year=? 
        and m1_0.duration=? 
    limit
        ?
2024-11-14T11:47:58.945+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T11:47:58.995+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie
        (duration, release_year, title) 
    values
        (?, ?, ?)
2024-11-14T11:47:58.998+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T11:47:59.014+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Saved movie data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T11:49:26.126+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T11:49:26.142+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T11:49:26.163+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    delete 
    from
        movie_actor 
    where
        movie_id=?
2024-11-14T11:49:26.168+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    delete 
    from
        movie_genre 
    where
        movie_id=?
2024-11-14T11:49:26.172+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    delete 
    from
        movie 
    where
        id=?
2024-11-14T12:14:00.550+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29), ActorCreateDto(name=John Travolta, birthDate=1954-02-18), ActorCreateDto(name=Samuel L. Jackson, birthDate=1948-12-21)], genres=[CreateOrPatchGenreDto(name=Drama), CreateOrPatchGenreDto(name=Crime), CreateOrPatchGenreDto(name=Gangster)], actorIds=null, genreIds=null)
2024-11-14T12:14:00.551+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29), ActorCreateDto(name=John Travolta, birthDate=1954-02-18), ActorCreateDto(name=Samuel L. Jackson, birthDate=1948-12-21)], genres=[CreateOrPatchGenreDto(name=Drama), CreateOrPatchGenreDto(name=Crime), CreateOrPatchGenreDto(name=Gangster)], actorIds=null, genreIds=null)
2024-11-14T12:14:00.553+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.id 
    from
        movie m1_0 
    where
        m1_0.title=? 
        and m1_0.release_year=? 
        and m1_0.duration=? 
    limit
        ?
2024-11-14T12:14:00.554+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : Finding or creating actor: Uma Thurman
2024-11-14T12:14:00.571+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:14:00.577+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : Found actor: Optional.empty
2024-11-14T12:14:00.580+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        actor
        (birth_date, name) 
    values
        (?, ?)
2024-11-14T12:14:00.586+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:00.587+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : Finding or creating actor: John Travolta
2024-11-14T12:14:00.591+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:14:00.592+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : Found actor: Optional.empty
2024-11-14T12:14:00.594+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        actor
        (birth_date, name) 
    values
        (?, ?)
2024-11-14T12:14:00.596+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:00.602+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : Finding or creating actor: Samuel L. Jackson
2024-11-14T12:14:00.604+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:14:00.605+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : Found actor: Optional.empty
2024-11-14T12:14:00.606+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        actor
        (birth_date, name) 
    values
        (?, ?)
2024-11-14T12:14:00.607+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:00.609+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Finding or creating genre: drama
2024-11-14T12:14:00.617+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:14:00.618+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T12:14:00.622+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        genre
        (name) 
    values
        (?)
2024-11-14T12:14:00.623+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:00.624+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Finding or creating genre: crime
2024-11-14T12:14:00.628+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:14:00.628+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T12:14:00.630+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        genre
        (name) 
    values
        (?)
2024-11-14T12:14:00.631+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:00.632+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Finding or creating genre: gangster
2024-11-14T12:14:00.636+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:14:00.637+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T12:14:00.639+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        genre
        (name) 
    values
        (?)
2024-11-14T12:14:00.640+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:00.642+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, assignedMovies=[]), Actor(name=John Travolta, birthDate=1954-02-18, assignedMovies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, assignedMovies=[])], genres=[Genre(name=gangster, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[])])
2024-11-14T12:14:00.643+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        movie
        (duration, release_year, title) 
    values
        (?, ?, ?)
2024-11-14T12:14:00.645+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:00.648+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Saved movie data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, assignedMovies=[]), Actor(name=John Travolta, birthDate=1954-02-18, assignedMovies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, assignedMovies=[])], genres=[Genre(name=gangster, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[])])
2024-11-14T12:14:00.656+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:14:00.657+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:14:00.658+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:14:00.659+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:14:00.659+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:14:00.660+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:14:09.049+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=dead, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T12:14:09.068+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        lower(m1_0.title) like ? 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T12:14:09.076+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: []
2024-11-14T12:14:12.643+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T12:14:12.645+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T12:14:12.650+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:14:12.653+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:12.654+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:14:12.656+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:14:12.657+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:12.659+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:14:12.661+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:12.662+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:12.663+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:12.665+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:12.666+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T12:14:18.208+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:14:18.209+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:14:18.210+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    delete 
    from
        movie_actor 
    where
        movie_id=?
2024-11-14T12:14:18.211+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    delete 
    from
        movie_genre 
    where
        movie_id=?
2024-11-14T12:14:18.212+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    delete 
    from
        movie 
    where
        id=?
2024-11-14T12:14:36.441+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29), ActorCreateDto(name=John Travolta, birthDate=1954-02-18), ActorCreateDto(name=Samuel L. Jackson, birthDate=1948-12-21)], genres=[CreateOrPatchGenreDto(name=Drama), CreateOrPatchGenreDto(name=Crime), CreateOrPatchGenreDto(name=Gangster)], actorIds=null, genreIds=null)
2024-11-14T12:14:36.442+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29), ActorCreateDto(name=John Travolta, birthDate=1954-02-18), ActorCreateDto(name=Samuel L. Jackson, birthDate=1948-12-21)], genres=[CreateOrPatchGenreDto(name=Drama), CreateOrPatchGenreDto(name=Crime), CreateOrPatchGenreDto(name=Gangster)], actorIds=null, genreIds=null)
2024-11-14T12:14:36.444+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id 
    from
        movie m1_0 
    where
        m1_0.title=? 
        and m1_0.release_year=? 
        and m1_0.duration=? 
    limit
        ?
2024-11-14T12:14:36.444+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Finding or creating actor: Uma Thurman
2024-11-14T12:14:36.445+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:14:36.447+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:36.447+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Uma Thurman, birthDate=1970-04-29, assignedMovies=[])]
2024-11-14T12:14:36.447+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Finding or creating actor: John Travolta
2024-11-14T12:14:36.449+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:14:36.451+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:36.451+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=John Travolta, birthDate=1954-02-18, assignedMovies=[])]
2024-11-14T12:14:36.451+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Finding or creating actor: Samuel L. Jackson
2024-11-14T12:14:36.453+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:14:36.455+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:36.456+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Samuel L. Jackson, birthDate=1948-12-21, assignedMovies=[])]
2024-11-14T12:14:36.456+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Finding or creating genre: drama
2024-11-14T12:14:36.458+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:14:36.459+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:36.460+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=drama, movies=[])]
2024-11-14T12:14:36.460+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Finding or creating genre: crime
2024-11-14T12:14:36.462+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:14:36.464+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:36.464+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=crime, movies=[])]
2024-11-14T12:14:36.465+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Finding or creating genre: gangster
2024-11-14T12:14:36.467+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:14:36.468+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:36.469+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=gangster, movies=[])]
2024-11-14T12:14:36.469+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, assignedMovies=[]), Actor(name=John Travolta, birthDate=1954-02-18, assignedMovies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, assignedMovies=[])], genres=[Genre(name=gangster, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[])])
2024-11-14T12:14:36.470+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie
        (duration, release_year, title) 
    values
        (?, ?, ?)
2024-11-14T12:14:36.470+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:14:36.471+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Saved movie data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, assignedMovies=[]), Actor(name=John Travolta, birthDate=1954-02-18, assignedMovies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, assignedMovies=[])], genres=[Genre(name=gangster, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[])])
2024-11-14T12:14:36.474+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:14:36.475+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:14:36.476+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:14:36.476+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:14:36.477+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:14:36.478+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:14:57.327+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T12:14:57.329+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T12:14:57.330+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:14:57.332+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:57.333+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:14:57.334+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:14:57.336+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:57.337+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:14:57.338+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:57.339+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:14:57.341+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:57.342+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:14:57.343+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T12:15:05.496+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:15:05.498+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:15:05.499+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:15:05.500+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:15:05.501+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:15:05.503+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:15:05.504+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:15:05.505+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:15:05.507+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:15:05.508+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:15:05.509+02:00 DEBUG 12947 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        am1_0.actor_id,
        am1_1.id,
        am1_1.duration,
        am1_1.release_year,
        am1_1.title 
    from
        movie_actor am1_0 
    join
        movie am1_1 
            on am1_1.id=am1_0.movie_id 
    where
        am1_0.actor_id=?
2024-11-14T12:15:05.510+02:00  INFO 12947 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : getMovieById data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T12:18:39.771+02:00  INFO 12947 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:18:39.780+02:00  INFO 12947 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T12:18:39.792+02:00  INFO 12947 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T12:18:55.704+02:00  INFO 25990 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 25990 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T12:18:55.716+02:00  INFO 25990 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T12:18:57.519+02:00  INFO 25990 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T12:18:57.631+02:00  INFO 25990 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 98 ms. Found 3 JPA repository interfaces.
2024-11-14T12:18:59.002+02:00  INFO 25990 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T12:18:59.031+02:00  INFO 25990 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T12:18:59.032+02:00  INFO 25990 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T12:18:59.121+02:00  INFO 25990 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T12:18:59.122+02:00  INFO 25990 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3333 ms
2024-11-14T12:18:59.623+02:00  INFO 25990 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T12:18:59.688+02:00  INFO 25990 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T12:18:59.731+02:00  INFO 25990 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T12:19:00.124+02:00  INFO 25990 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T12:19:00.159+02:00  INFO 25990 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T12:19:00.327+02:00  INFO 25990 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@7fd3fd06
2024-11-14T12:19:00.330+02:00  INFO 25990 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T12:19:01.412+02:00  INFO 25990 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T12:19:01.452+02:00  INFO 25990 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:19:01.931+02:00  INFO 25990 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T12:19:02.366+02:00  WARN 25990 --- [moviedb-api] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'actorApiController' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/controller/ActorApiController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'actorService' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/service/ActorService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'actorRepository' defined in com.moviedb_api.repository.ActorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); Reason: Failed to create query for method public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); No property 'movies' found for type 'Actor'
2024-11-14T12:19:02.366+02:00  INFO 25990 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:19:02.368+02:00  INFO 25990 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T12:19:02.371+02:00  INFO 25990 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T12:19:02.374+02:00  INFO 25990 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-11-14T12:19:02.396+02:00  INFO 25990 --- [moviedb-api] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-14T12:19:02.417+02:00 ERROR 25990 --- [moviedb-api] [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'actorApiController' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/controller/ActorApiController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'actorService' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/service/ActorService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'actorRepository' defined in com.moviedb_api.repository.ActorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); Reason: Failed to create query for method public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); No property 'movies' found for type 'Actor'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.14.jar:6.1.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.14.jar:6.1.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) ~[spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) ~[spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) ~[spring-boot-3.3.5.jar:3.3.5]
	at com.moviedb_api.MoviedbApiApplication.main(MoviedbApiApplication.java:10) ~[classes/:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'actorService' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/service/ActorService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'actorRepository' defined in com.moviedb_api.repository.ActorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); Reason: Failed to create query for method public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); No property 'movies' found for type 'Actor'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.14.jar:6.1.14]
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'actorRepository' defined in com.moviedb_api.repository.ActorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); Reason: Failed to create query for method public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); No property 'movies' found for type 'Actor'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.14.jar:6.1.14]
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); Reason: Failed to create query for method public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); No property 'movies' found for type 'Actor'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at java.base/java.util.Optional.map(Optional.java:260) ~[na:na]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.util.Lazy.get(Lazy.java:113) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132) ~[spring-data-jpa-3.3.5.jar:3.3.5]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.14.jar:6.1.14]
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Set com.moviedb_api.repository.ActorRepository.findAllByMovies_Id(long); No property 'movies' found for type 'Actor'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107) ~[spring-data-jpa-3.3.5.jar:3.3.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124) ~[spring-data-jpa-3.3.5.jar:3.3.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258) ~[spring-data-jpa-3.3.5.jar:3.3.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95) ~[spring-data-jpa-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115) ~[spring-data-commons-3.3.5.jar:3.3.5]
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'movies' found for type 'Actor'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330) ~[na:na]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682) ~[na:na]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682) ~[na:na]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103) ~[spring-data-commons-3.3.5.jar:3.3.5]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101) ~[spring-data-jpa-3.3.5.jar:3.3.5]
	... 60 common frames omitted

2024-11-14T12:22:05.477+02:00  INFO 27138 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 27138 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T12:22:05.482+02:00  INFO 27138 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T12:22:07.333+02:00  INFO 27138 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T12:22:07.437+02:00  INFO 27138 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 3 JPA repository interfaces.
2024-11-14T12:22:08.790+02:00  INFO 27138 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T12:22:08.827+02:00  INFO 27138 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T12:22:08.828+02:00  INFO 27138 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T12:22:08.923+02:00  INFO 27138 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T12:22:08.923+02:00  INFO 27138 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3353 ms
2024-11-14T12:22:09.460+02:00  INFO 27138 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T12:22:09.540+02:00  INFO 27138 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T12:22:09.589+02:00  INFO 27138 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T12:22:09.971+02:00  INFO 27138 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T12:22:10.012+02:00  INFO 27138 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T12:22:10.159+02:00  INFO 27138 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@7c88d04f
2024-11-14T12:22:10.164+02:00  INFO 27138 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T12:22:11.366+02:00  INFO 27138 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T12:22:11.413+02:00  INFO 27138 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:22:11.877+02:00  INFO 27138 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T12:22:12.830+02:00  WARN 27138 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T12:22:14.572+02:00  INFO 27138 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T12:22:14.720+02:00  INFO 27138 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T12:22:14.756+02:00  INFO 27138 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.81 seconds (process running for 10.664)
2024-11-14T12:22:17.323+02:00  INFO 27138 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T12:22:17.325+02:00  INFO 27138 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T12:22:17.328+02:00  INFO 27138 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T12:22:27.675+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/movie.
2024-11-14T12:22:27.676+02:00  WARN 27138 --- [moviedb-api] [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Failure in @ExceptionHandler com.moviedb_api.exception.GlobalExceptionHandler#handleGenericException(Exception)

java.lang.NullPointerException: Cannot invoke "java.lang.Throwable.toString()" because the return value of "java.lang.Exception.getCause()" is null
	at com.moviedb_api.exception.GlobalExceptionHandler.handleGenericException(GlobalExceptionHandler.java:90) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1358) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1161) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.31.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.31.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-11-14T12:22:54.980+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[ActorCreateDto(name=Elijah Wood, birthDate=1981-01-28), ActorCreateDto(name=Ian McKellen, birthDate=1939-05-25), ActorCreateDto(name=Orlando Bloom, birthDate=1977-01-13)], genres=[CreateOrPatchGenreDto(name=Action), CreateOrPatchGenreDto(name=Adventure), CreateOrPatchGenreDto(name=Fantasy)], actorIds=null, genreIds=null)
2024-11-14T12:22:54.990+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[ActorCreateDto(name=Elijah Wood, birthDate=1981-01-28), ActorCreateDto(name=Ian McKellen, birthDate=1939-05-25), ActorCreateDto(name=Orlando Bloom, birthDate=1977-01-13)], genres=[CreateOrPatchGenreDto(name=Action), CreateOrPatchGenreDto(name=Adventure), CreateOrPatchGenreDto(name=Fantasy)], actorIds=null, genreIds=null)
2024-11-14T12:22:55.087+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id 
    from
        movie m1_0 
    where
        m1_0.title=? 
        and m1_0.release_year=? 
        and m1_0.duration=? 
    limit
        ?
2024-11-14T12:22:55.104+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Finding or creating actor: Elijah Wood
2024-11-14T12:22:55.130+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:22:55.133+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actor: Optional.empty
2024-11-14T12:22:55.171+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        actor
        (birth_date, name) 
    values
        (?, ?)
2024-11-14T12:22:55.176+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:22:55.188+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Finding or creating actor: Ian McKellen
2024-11-14T12:22:55.201+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:22:55.202+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actor: Optional.empty
2024-11-14T12:22:55.203+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        actor
        (birth_date, name) 
    values
        (?, ?)
2024-11-14T12:22:55.204+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:22:55.205+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Finding or creating actor: Orlando Bloom
2024-11-14T12:22:55.207+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:22:55.210+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actor: Optional.empty
2024-11-14T12:22:55.212+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        actor
        (birth_date, name) 
    values
        (?, ?)
2024-11-14T12:22:55.213+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:22:55.215+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Finding or creating genre: action
2024-11-14T12:22:55.224+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:22:55.226+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T12:22:55.228+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        genre
        (name) 
    values
        (?)
2024-11-14T12:22:55.228+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:22:55.230+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Finding or creating genre: adventure
2024-11-14T12:22:55.233+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:22:55.235+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T12:22:55.236+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        genre
        (name) 
    values
        (?)
2024-11-14T12:22:55.236+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:22:55.237+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Finding or creating genre: fantasy
2024-11-14T12:22:55.239+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        upper(g1_0.name) like upper(?) escape '\'
2024-11-14T12:22:55.240+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T12:22:55.242+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        genre
        (name) 
    values
        (?)
2024-11-14T12:22:55.245+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:22:55.248+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[]), Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[])], genres=[Genre(name=action, movies=[]), Genre(name=adventure, movies=[]), Genre(name=fantasy, movies=[])])
2024-11-14T12:22:55.250+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        movie
        (duration, release_year, title) 
    values
        (?, ?, ?)
2024-11-14T12:22:55.251+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:22:55.253+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Saved movie data: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[]), Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[])], genres=[Genre(name=action, movies=[]), Genre(name=adventure, movies=[]), Genre(name=fantasy, movies=[])])
2024-11-14T12:22:55.287+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:22:55.288+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:22:55.289+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T12:22:55.290+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:22:55.293+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:22:55.294+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        movie_genre
        (movie_id, genre_id) 
    values
        (?, ?)
2024-11-14T12:24:35.570+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:24:35.584+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:24:35.591+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:35.596+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:24:35.597+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:35.599+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:35.600+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:24:35.601+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:24:35.603+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:24:35.604+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:24:35.606+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:24:35.608+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:24:35.610+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:35.615+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:24:57.543+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:24:57.546+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:24:57.548+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:57.549+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:24:57.551+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:57.552+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:57.553+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:24:57.554+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:24:57.555+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:24:57.556+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:24:57.557+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:24:57.558+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:24:57.560+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:24:57.563+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:24:57.568+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T12:25:25.260+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T12:25:25.282+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T12:25:25.286+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:25.290+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:25.292+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:25.293+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:25.295+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:25.298+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:25.299+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:25.300+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:25.302+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:25.303+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:25.305+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:25.306+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:25.308+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:25.310+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:25.312+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:25.314+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:25.316+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:25.318+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:25.321+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:25.325+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:25.328+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T12:25:30.570+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:25:30.572+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:30.574+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:30.575+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:30.576+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:30.577+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:30.578+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:30.579+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:30.580+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:30.581+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:30.582+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:30.583+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.MovieService     : getMovieById data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T12:25:52.118+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:25:52.121+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:25:52.123+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:52.124+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:52.126+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:52.127+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:52.128+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:52.129+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:52.130+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:52.132+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:52.134+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:52.135+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:52.137+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:52.142+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:25:52.144+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T12:25:55.876+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:25:55.879+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:25:55.881+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:55.882+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:55.883+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:55.883+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:55.885+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:25:55.886+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:55.888+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:55.888+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:25:55.890+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:55.892+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:25:55.893+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:25:55.898+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:27:43.211+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:27:43.214+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:27:43.215+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:27:43.216+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:27:43.217+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:27:43.218+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:27:43.219+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:27:43.220+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:27:43.222+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:27:43.222+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:27:43.223+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:27:43.224+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:27:43.226+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:27:43.229+02:00 DEBUG 27138 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:27:43.230+02:00  INFO 27138 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T12:27:52.066+02:00  INFO 27138 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:27:52.069+02:00  INFO 27138 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T12:27:52.078+02:00  INFO 27138 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T12:35:19.616+02:00  INFO 31827 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 31827 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T12:35:19.621+02:00  INFO 31827 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T12:35:21.443+02:00  INFO 31827 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T12:35:21.534+02:00  INFO 31827 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 3 JPA repository interfaces.
2024-11-14T12:35:22.657+02:00  INFO 31827 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T12:35:22.678+02:00  INFO 31827 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T12:35:22.680+02:00  INFO 31827 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T12:35:22.745+02:00  INFO 31827 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T12:35:22.746+02:00  INFO 31827 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3064 ms
2024-11-14T12:35:23.221+02:00  INFO 31827 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T12:35:23.294+02:00  INFO 31827 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T12:35:23.334+02:00  INFO 31827 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T12:35:23.663+02:00  INFO 31827 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T12:35:23.697+02:00  INFO 31827 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T12:35:23.863+02:00  INFO 31827 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@378c48c1
2024-11-14T12:35:23.865+02:00  INFO 31827 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T12:35:25.073+02:00  INFO 31827 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T12:35:25.137+02:00  INFO 31827 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:35:25.694+02:00  INFO 31827 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T12:35:26.683+02:00  WARN 31827 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T12:35:28.437+02:00  INFO 31827 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T12:35:28.438+02:00  INFO 31827 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T12:35:28.507+02:00  INFO 31827 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T12:35:28.581+02:00  INFO 31827 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 143 ms
2024-11-14T12:35:28.894+02:00  INFO 31827 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T12:35:28.949+02:00  INFO 31827 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.877 seconds (process running for 10.795)
2024-11-14T12:35:33.313+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:35:33.446+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:35:33.458+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:33.462+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:35:33.464+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:33.466+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:33.467+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:35:33.469+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:35:33.472+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:35:33.476+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:35:33.479+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:35:33.482+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:35:33.488+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:33.501+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:35:41.700+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:35:41.704+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:35:41.706+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:41.708+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:35:41.710+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:41.711+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:41.713+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:35:41.716+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:35:41.718+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:35:41.720+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:35:41.721+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:35:41.725+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:35:41.727+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:35:41.733+02:00 DEBUG 31827 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:35:41.743+02:00  INFO 31827 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T12:39:02.305+02:00  INFO 31827 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:39:02.309+02:00  INFO 31827 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T12:39:02.318+02:00  INFO 31827 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T12:39:04.249+02:00  INFO 33555 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 33555 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T12:39:04.253+02:00  INFO 33555 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T12:39:06.002+02:00  INFO 33555 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T12:39:06.108+02:00  INFO 33555 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95 ms. Found 3 JPA repository interfaces.
2024-11-14T12:39:07.128+02:00  INFO 33555 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T12:39:07.145+02:00  INFO 33555 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T12:39:07.145+02:00  INFO 33555 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T12:39:07.214+02:00  INFO 33555 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T12:39:07.215+02:00  INFO 33555 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2895 ms
2024-11-14T12:39:07.621+02:00  INFO 33555 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T12:39:07.677+02:00  INFO 33555 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T12:39:07.712+02:00  INFO 33555 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T12:39:08.027+02:00  INFO 33555 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T12:39:08.059+02:00  INFO 33555 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T12:39:08.199+02:00  INFO 33555 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@84a9f65
2024-11-14T12:39:08.201+02:00  INFO 33555 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T12:39:09.236+02:00  INFO 33555 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T12:39:09.276+02:00  INFO 33555 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:39:09.712+02:00  INFO 33555 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T12:39:10.810+02:00  WARN 33555 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T12:39:12.690+02:00  INFO 33555 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T12:39:12.837+02:00  INFO 33555 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T12:39:12.888+02:00  INFO 33555 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.283 seconds (process running for 10.149)
2024-11-14T12:40:00.557+02:00  INFO 33555 --- [moviedb-api] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T12:40:00.558+02:00  INFO 33555 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T12:40:00.561+02:00  INFO 33555 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-11-14T12:40:00.683+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:40:00.723+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:40:00.728+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:40:00.732+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:40:00.734+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:40:00.736+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:40:00.737+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:40:00.739+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:40:00.740+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:40:00.747+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:40:00.748+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:40:00.752+02:00  INFO 33555 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found movie Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T12:40:00.861+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:40:00.874+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:41:20.548+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:41:20.549+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:41:20.551+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:41:20.552+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:41:20.553+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:41:20.555+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:41:20.556+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:41:20.558+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:41:20.562+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:41:20.565+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:41:20.566+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:41:20.567+02:00  INFO 33555 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Found movie Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T12:41:20.571+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:41:20.574+02:00 DEBUG 33555 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:41:50.699+02:00  INFO 33555 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:41:50.707+02:00  INFO 33555 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T12:41:50.721+02:00  INFO 33555 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T12:41:52.456+02:00  INFO 34969 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 34969 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T12:41:52.458+02:00  INFO 34969 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T12:41:54.236+02:00  INFO 34969 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T12:41:54.349+02:00  INFO 34969 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 102 ms. Found 3 JPA repository interfaces.
2024-11-14T12:41:55.453+02:00  INFO 34969 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T12:41:55.474+02:00  INFO 34969 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T12:41:55.475+02:00  INFO 34969 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T12:41:55.558+02:00  INFO 34969 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T12:41:55.558+02:00  INFO 34969 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3010 ms
2024-11-14T12:41:56.122+02:00  INFO 34969 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T12:41:56.200+02:00  INFO 34969 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T12:41:56.244+02:00  INFO 34969 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T12:41:56.558+02:00  INFO 34969 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T12:41:56.597+02:00  INFO 34969 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T12:41:56.746+02:00  INFO 34969 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@5fafa76d
2024-11-14T12:41:56.752+02:00  INFO 34969 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T12:41:57.773+02:00  INFO 34969 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T12:41:57.810+02:00  INFO 34969 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:41:58.189+02:00  INFO 34969 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T12:41:59.023+02:00  WARN 34969 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T12:42:00.358+02:00  INFO 34969 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T12:42:00.498+02:00  INFO 34969 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T12:42:00.528+02:00  INFO 34969 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 8.659 seconds (process running for 9.423)
2024-11-14T12:42:07.289+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T12:42:07.291+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T12:42:07.293+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T12:42:07.418+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:42:07.463+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:42:07.471+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:42:07.476+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:42:07.480+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:42:07.482+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:42:07.485+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:42:07.486+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:42:07.492+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:42:07.495+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:42:07.496+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:42:07.498+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T12:42:07.588+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:42:07.593+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T12:42:07.601+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:42:07.606+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T12:43:48.780+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:43:48.781+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:43:48.784+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:43:48.785+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:43:48.787+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:43:48.788+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:43:48.790+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:43:48.793+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:43:48.796+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:43:48.799+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:43:48.801+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:43:48.803+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T12:43:48.806+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T12:43:48.808+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T12:43:48.812+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T12:43:48.814+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T12:43:48.826+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T12:45:02.332+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T12:45:02.362+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T12:45:02.376+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:02.382+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:02.386+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:02.392+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:02.397+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:02.400+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:02.406+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:02.414+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:02.418+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:02.423+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:02.429+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:02.433+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:02.438+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:02.440+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:02.444+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:02.449+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:02.452+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:02.456+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:02.460+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:02.464+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:02.465+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T12:45:08.201+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0
2024-11-14T12:45:08.203+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.205+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:08.208+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:08.209+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:08.210+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:08.212+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.213+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.214+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:08.217+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.219+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:08.221+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:08.224+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.226+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:08.228+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:08.230+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:08.231+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:08.236+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.238+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.240+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:08.242+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:08.245+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:08.247+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:08.249+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=drama, movies=[]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T12:45:27.340+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=pedro, birthDate=null, page=0, size=30, sortBy=name)
2024-11-14T12:45:27.355+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        lower(a1_0.name) like ? 
    order by
        a1_0.name 
    limit
        ? 
    offset
        ?
2024-11-14T12:45:27.363+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : getActorsByFilter result data: []
2024-11-14T12:45:34.168+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=null, birthDate=null, page=0, size=30, sortBy=name)
2024-11-14T12:45:34.170+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        1=1 
    order by
        a1_0.name 
    limit
        ? 
    offset
        ?
2024-11-14T12:45:34.173+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.174+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:34.175+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.176+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.177+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:34.178+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:34.179+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:34.180+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:34.182+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:34.183+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:34.184+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.185+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.186+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:34.187+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.188+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:45:34.189+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:34.192+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:34.193+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:45:34.194+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:34.195+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:45:34.196+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.197+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:45:34.198+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.ActorService     : getActorsByFilter result data: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T12:46:03.443+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:46:03.445+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:46:03.447+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:46:03.449+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:46:03.450+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:46:03.451+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:46:03.455+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:46:03.456+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:46:03.457+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:46:03.458+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:46:03.460+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:46:03.461+02:00 DEBUG 34969 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:46:03.462+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=John Travolta, birthDate=1954-02-18, movies=[])
2024-11-14T12:46:30.172+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : ActorController: getting actor's movies. Actor id: 2
2024-11-14T12:46:30.172+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=2, page=0, size=10, sortBy=title)
2024-11-14T12:46:30.179+02:00  INFO 34969 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve attribute 'assignedActors' of 'com.moviedb_api.entity.Movie'
2024-11-14T12:49:29.794+02:00  INFO 34969 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:49:29.798+02:00  INFO 34969 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T12:49:29.803+02:00  INFO 34969 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T12:49:31.466+02:00  INFO 37898 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 37898 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T12:49:31.470+02:00  INFO 37898 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T12:49:33.199+02:00  INFO 37898 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T12:49:33.315+02:00  INFO 37898 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107 ms. Found 3 JPA repository interfaces.
2024-11-14T12:49:34.465+02:00  INFO 37898 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T12:49:34.481+02:00  INFO 37898 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T12:49:34.481+02:00  INFO 37898 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T12:49:34.557+02:00  INFO 37898 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T12:49:34.558+02:00  INFO 37898 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2999 ms
2024-11-14T12:49:35.028+02:00  INFO 37898 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T12:49:35.092+02:00  INFO 37898 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T12:49:35.131+02:00  INFO 37898 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T12:49:35.440+02:00  INFO 37898 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T12:49:35.474+02:00  INFO 37898 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T12:49:35.647+02:00  INFO 37898 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@720ffab4
2024-11-14T12:49:35.649+02:00  INFO 37898 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T12:49:36.589+02:00  INFO 37898 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T12:49:36.649+02:00  INFO 37898 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:49:37.107+02:00  INFO 37898 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T12:49:37.923+02:00  WARN 37898 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T12:49:39.310+02:00  INFO 37898 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T12:49:39.417+02:00  INFO 37898 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T12:49:39.449+02:00  INFO 37898 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 8.509 seconds (process running for 9.276)
2024-11-14T12:49:45.425+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T12:49:45.425+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T12:49:45.427+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T12:49:45.522+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : ActorController: getting actor's movies. Actor id: 2
2024-11-14T12:49:45.531+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=2, page=0, size=10, sortBy=title)
2024-11-14T12:49:45.570+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve attribute 'assignedActors' of 'com.moviedb_api.entity.Movie'
2024-11-14T12:50:19.424+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.ActorService     : ActorController: getting actor's movies. Actor id: 2
2024-11-14T12:50:19.425+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=2, page=0, size=10, sortBy=title)
2024-11-14T12:50:19.428+02:00  INFO 37898 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.dao.InvalidDataAccessApiUsageException: Could not resolve attribute 'assignedActors' of 'com.moviedb_api.entity.Movie'
2024-11-14T12:52:31.057+02:00  INFO 37898 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:52:31.061+02:00  INFO 37898 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T12:52:31.085+02:00  INFO 37898 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T12:52:32.761+02:00  INFO 39052 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 39052 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T12:52:32.764+02:00  INFO 39052 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T12:52:34.659+02:00  INFO 39052 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T12:52:34.769+02:00  INFO 39052 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 99 ms. Found 3 JPA repository interfaces.
2024-11-14T12:52:35.701+02:00  INFO 39052 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T12:52:35.720+02:00  INFO 39052 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T12:52:35.721+02:00  INFO 39052 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T12:52:35.790+02:00  INFO 39052 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T12:52:35.791+02:00  INFO 39052 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2940 ms
2024-11-14T12:52:36.197+02:00  INFO 39052 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T12:52:36.260+02:00  INFO 39052 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T12:52:36.297+02:00  INFO 39052 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T12:52:36.595+02:00  INFO 39052 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T12:52:36.630+02:00  INFO 39052 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T12:52:36.767+02:00  INFO 39052 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@70700b8a
2024-11-14T12:52:36.770+02:00  INFO 39052 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T12:52:37.706+02:00  INFO 39052 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T12:52:37.744+02:00  INFO 39052 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T12:52:38.204+02:00  INFO 39052 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T12:52:39.205+02:00  WARN 39052 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T12:52:40.637+02:00  INFO 39052 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T12:52:40.736+02:00  INFO 39052 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T12:52:40.762+02:00  INFO 39052 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 8.545 seconds (process running for 9.3)
2024-11-14T12:52:46.138+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T12:52:46.139+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T12:52:46.142+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-11-14T12:52:46.261+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : ActorController: getting actor's movies. Actor id: 2
2024-11-14T12:52:46.270+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=2, page=0, size=10, sortBy=title)
2024-11-14T12:52:46.389+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    join
        movie_actor a1_0 
            on m1_0.id=a1_0.movie_id 
    where
        a1_0.actor_id=? 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T12:52:46.437+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:52:46.449+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:52:46.452+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:52:46.458+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:52:46.460+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:52:46.461+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:52:46.463+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:52:46.466+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:52:46.471+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:52:46.476+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:52:46.483+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T12:52:56.169+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:52:56.172+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:52:56.175+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:52:56.178+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:52:56.180+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:52:56.181+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:52:56.184+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:52:56.186+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:52:56.187+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:52:56.188+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:52:56.190+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:52:56.192+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:52:56.212+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=John Travolta, birthDate=1954-02-18, movies=[])
2024-11-14T12:53:03.306+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:53:03.308+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:03.309+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:03.311+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:03.313+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:03.315+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:03.316+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:03.318+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:03.319+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:03.320+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:03.322+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:03.323+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:03.324+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])
2024-11-14T12:53:07.114+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:53:07.116+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:07.117+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:07.119+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:07.120+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:07.121+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:07.123+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:07.124+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:07.125+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:07.126+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:07.128+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:07.129+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:07.130+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=John Travolta, birthDate=1954-02-18, movies=[])
2024-11-14T12:53:11.126+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:53:11.127+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:11.128+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:11.129+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:11.130+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:11.132+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:11.133+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:11.134+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:11.135+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:11.136+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:11.137+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:11.139+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:11.140+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])
2024-11-14T12:53:21.416+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:53:21.418+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:21.419+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:21.420+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:21.422+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:21.423+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:21.424+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:21.426+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:21.427+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:21.429+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:21.430+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:21.431+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:21.433+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[])
2024-11-14T12:53:27.073+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:53:27.074+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:27.075+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:27.077+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:27.078+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:27.079+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:27.081+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:27.082+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:27.083+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:27.084+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:27.085+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:27.086+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:27.087+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[])
2024-11-14T12:53:31.846+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:53:31.847+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:31.848+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:31.850+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:31.851+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:53:31.852+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:31.854+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:31.856+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:53:31.857+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:31.859+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:53:31.861+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:31.862+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:53:31.863+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[])
2024-11-14T12:54:04.525+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:54:04.528+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T12:54:04.584+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    delete 
    from
        actor 
    where
        id=?
2024-11-14T12:55:52.213+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id 
    from
        actor a1_0 
    where
        upper(a1_0.name) like upper(?) escape '\' 
        and a1_0.birth_date=? 
    limit
        ?
2024-11-14T12:55:52.229+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        actor
        (birth_date, name) 
    values
        (?, ?)
2024-11-14T12:55:52.235+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
2024-11-14T12:55:52.249+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Saved actor: Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])
2024-11-14T12:56:15.928+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T12:56:15.935+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T12:56:15.936+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:56:15.938+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:56:15.942+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:56:15.944+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:56:15.950+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:15.952+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:56:15.955+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:15.956+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:15.957+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:56:15.962+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:56:15.963+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:56:15.965+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T12:56:15.968+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:56:15.972+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:15.976+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:56:15.978+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:15.981+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:15.983+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:56:15.986+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:56:15.989+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T12:56:39.062+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Updating movie with id: 1 MoviePatchDto(title=null, releaseYear=null, duration=null, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29)], genres=null, actorIds=null, genreIds=null)
2024-11-14T12:56:39.066+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T12:56:39.075+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.ActorService     : Finding or creating actor: Uma Thurman
2024-11-14T12:56:39.091+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T12:56:39.093+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T12:56:39.094+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])]
2024-11-14T12:56:39.098+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:56:39.099+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:39.106+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T12:56:39.107+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:39.110+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T12:56:39.113+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])], genres=[])
2024-11-14T12:56:39.122+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Saved updated movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])], genres=[])
2024-11-14T12:56:39.135+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    delete 
    from
        movie_actor 
    where
        movie_id=?
2024-11-14T12:56:39.143+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T13:03:08.074+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : Updating movie with id: 1 MoviePatchDto(title=null, releaseYear=null, duration=null, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29), ActorCreateDto(name=John Travolta, birthDate=1954-02-18), ActorCreateDto(name=Samuel L. Jackson, birthDate=1948-12-21)], genres=null, actorIds=null, genreIds=null)
2024-11-14T13:03:08.075+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:03:08.077+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Finding or creating actor: Uma Thurman
2024-11-14T13:03:08.079+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T13:03:08.081+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:08.083+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:03:08.084+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:08.086+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:08.088+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:08.091+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:08.092+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:08.095+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:08.096+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])]
2024-11-14T13:03:08.097+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Finding or creating actor: John Travolta
2024-11-14T13:03:08.099+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T13:03:08.101+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:08.102+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=John Travolta, birthDate=1954-02-18, movies=[])]
2024-11-14T13:03:08.103+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Finding or creating actor: Samuel L. Jackson
2024-11-14T13:03:08.105+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.name=? 
        and a1_0.birth_date=?
2024-11-14T13:03:08.107+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:08.108+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])]
2024-11-14T13:03:08.108+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])], genres=[])
2024-11-14T13:03:08.110+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : Saved updated movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])], genres=[])
2024-11-14T13:03:08.112+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    delete 
    from
        movie_actor 
    where
        movie_id=?
2024-11-14T13:03:08.113+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T13:03:08.114+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T13:03:08.114+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        movie_actor
        (movie_id, actor_id) 
    values
        (?, ?)
2024-11-14T13:03:43.376+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T13:03:43.379+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T13:03:43.380+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:03:43.381+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:43.382+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:03:43.383+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:43.384+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:43.389+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:43.391+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:43.392+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:43.393+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:43.394+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:43.396+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:03:43.398+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:43.400+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:03:43.401+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:43.402+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:43.403+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:43.404+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:43.405+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:43.407+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:43.408+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:43.409+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T13:03:48.030+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:03:48.031+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:03:48.032+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:48.033+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:03:48.034+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:48.036+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:48.037+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:03:48.038+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:48.039+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:03:48.040+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:48.042+02:00 DEBUG 39052 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:03:48.043+02:00  INFO 39052 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.MovieService     : getMovieById data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:06:39.479+02:00  INFO 39052 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:06:39.484+02:00  INFO 39052 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T13:06:39.493+02:00  INFO 39052 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T13:06:41.148+02:00  INFO 44173 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 44173 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T13:06:41.151+02:00  INFO 44173 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T13:06:42.881+02:00  INFO 44173 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T13:06:42.976+02:00  INFO 44173 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 83 ms. Found 3 JPA repository interfaces.
2024-11-14T13:06:43.964+02:00  INFO 44173 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T13:06:43.999+02:00  INFO 44173 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T13:06:44.000+02:00  INFO 44173 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T13:06:44.105+02:00  INFO 44173 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T13:06:44.107+02:00  INFO 44173 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2895 ms
2024-11-14T13:06:44.584+02:00  INFO 44173 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T13:06:44.681+02:00  INFO 44173 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T13:06:44.747+02:00  INFO 44173 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T13:06:45.117+02:00  INFO 44173 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T13:06:45.150+02:00  INFO 44173 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T13:06:45.312+02:00  INFO 44173 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@62dc1203
2024-11-14T13:06:45.314+02:00  INFO 44173 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T13:06:46.253+02:00  INFO 44173 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T13:06:46.290+02:00  INFO 44173 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:06:46.664+02:00  INFO 44173 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T13:06:47.475+02:00  WARN 44173 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T13:06:48.795+02:00  INFO 44173 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T13:06:48.910+02:00  INFO 44173 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T13:06:48.941+02:00  INFO 44173 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 8.335 seconds (process running for 9.075)
2024-11-14T13:06:55.051+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T13:06:55.051+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T13:06:55.053+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T13:06:55.209+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0
2024-11-14T13:06:55.245+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:06:55.250+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.actor_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.movie_id 
    where
        a1_0.actor_id=?
2024-11-14T13:06:55.252+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:06:55.256+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:06:55.260+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.actor_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.movie_id 
    where
        a1_0.actor_id=?
2024-11-14T13:06:55.262+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:06:55.264+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:06:55.266+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:06:55.270+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:06:55.273+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:06:55.275+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:06:55.277+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=drama, movies=[]), Genre(name=crime, movies=[]), Genre(name=gangster, movies=[]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[]), Genre(name=fantasy, movies=[])]
2024-11-14T13:07:08.234+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=null, birthDate=null, page=0, size=30, sortBy=name)
2024-11-14T13:07:08.252+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        1=1 
    order by
        a1_0.name 
    limit
        ? 
    offset
        ?
2024-11-14T13:07:08.266+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:08.269+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:08.271+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:08.274+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:08.277+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:08.279+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:08.281+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : getActorsByFilter result data: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])]
2024-11-14T13:07:13.066+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    where
        a1_0.id=?
2024-11-14T13:07:13.070+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:13.071+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[])
2024-11-14T13:07:19.595+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T13:07:19.600+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T13:07:19.605+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.actor_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.movie_id 
    where
        a1_0.actor_id=?
2024-11-14T13:07:19.606+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:07:19.610+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:19.615+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:07:19.620+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.actor_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.movie_id 
    where
        a1_0.actor_id=?
2024-11-14T13:07:19.622+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:07:19.626+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:19.630+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[Genre(name=drama, movies=[])])]
2024-11-14T13:07:30.636+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:07:30.638+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.actor_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.movie_id 
    where
        a1_0.actor_id=?
2024-11-14T13:07:30.639+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:07:30.641+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:30.643+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:07:30.644+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.actor_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.movie_id 
    where
        a1_0.actor_id=?
2024-11-14T13:07:30.646+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.genre_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:07:30.647+02:00 DEBUG 44173 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.movie_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:07:30.649+02:00  INFO 44173 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : getMovieById data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:09:34.871+02:00  INFO 44173 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:09:34.876+02:00  INFO 44173 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T13:09:34.887+02:00  INFO 44173 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T13:09:37.169+02:00  INFO 46405 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 46405 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T13:09:37.172+02:00  INFO 46405 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T13:09:40.041+02:00  INFO 46405 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T13:09:40.137+02:00  INFO 46405 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 3 JPA repository interfaces.
2024-11-14T13:09:41.399+02:00  INFO 46405 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T13:09:41.424+02:00  INFO 46405 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T13:09:41.426+02:00  INFO 46405 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T13:09:41.510+02:00  INFO 46405 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T13:09:41.511+02:00  INFO 46405 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4226 ms
2024-11-14T13:09:42.056+02:00  INFO 46405 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T13:09:42.142+02:00  INFO 46405 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T13:09:42.192+02:00  INFO 46405 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T13:09:42.640+02:00  INFO 46405 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T13:09:42.684+02:00  INFO 46405 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T13:09:42.950+02:00  INFO 46405 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@520ee6b3
2024-11-14T13:09:42.953+02:00  INFO 46405 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T13:09:44.390+02:00  INFO 46405 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T13:09:44.449+02:00  INFO 46405 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:09:45.097+02:00  INFO 46405 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T13:09:46.219+02:00  WARN 46405 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T13:09:48.206+02:00  INFO 46405 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T13:09:48.461+02:00  INFO 46405 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T13:09:48.515+02:00  INFO 46405 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 12.181 seconds (process running for 13.251)
2024-11-14T13:10:48.095+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T13:10:48.095+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T13:10:48.097+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-14T13:10:48.252+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0
2024-11-14T13:10:48.302+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.307+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:10:48.312+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:10:48.315+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:10:48.319+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:10:48.323+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.327+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.329+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:10:48.334+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.338+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:10:48.343+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:10:48.349+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.352+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:10:48.357+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:10:48.359+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:10:48.363+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:10:48.365+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.368+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.371+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:10:48.374+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:10:48.378+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:10:48.383+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:10:48.386+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=drama, movies=[]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T13:11:00.080+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:11:00.082+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:11:00.084+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:11:00.085+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:11:00.086+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:11:00.087+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:11:00.088+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:11:00.089+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:11:00.090+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:11:00.092+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:11:00.093+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:11:00.094+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:11:00.141+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:11:00.147+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:11:00.161+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:11:00.165+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:11:08.069+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:11:08.070+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:11:08.071+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:11:08.072+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:11:08.073+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:11:08.075+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:11:08.076+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:11:08.077+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:11:08.078+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:11:08.079+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:11:08.081+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:11:08.082+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:11:08.085+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:11:08.086+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:11:08.089+02:00 DEBUG 46405 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:11:08.090+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:11:08.099+02:00  INFO 46405 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T13:12:41.556+02:00  INFO 46405 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:12:41.560+02:00  INFO 46405 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T13:12:41.571+02:00  INFO 46405 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T13:12:43.340+02:00  INFO 48011 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 48011 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T13:12:43.344+02:00  INFO 48011 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T13:12:45.521+02:00  INFO 48011 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T13:12:45.655+02:00  INFO 48011 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 123 ms. Found 3 JPA repository interfaces.
2024-11-14T13:12:46.868+02:00  INFO 48011 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T13:12:46.884+02:00  INFO 48011 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T13:12:46.885+02:00  INFO 48011 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T13:12:46.956+02:00  INFO 48011 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T13:12:46.958+02:00  INFO 48011 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3517 ms
2024-11-14T13:12:47.474+02:00  INFO 48011 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T13:12:47.577+02:00  INFO 48011 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T13:12:47.638+02:00  INFO 48011 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T13:12:47.990+02:00  INFO 48011 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T13:12:48.030+02:00  INFO 48011 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T13:12:48.203+02:00  INFO 48011 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@2e62e227
2024-11-14T13:12:48.207+02:00  INFO 48011 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T13:12:49.260+02:00  INFO 48011 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T13:12:49.295+02:00  INFO 48011 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:12:49.691+02:00  INFO 48011 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T13:12:50.463+02:00  WARN 48011 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T13:12:51.773+02:00  INFO 48011 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T13:12:52.019+02:00  INFO 48011 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T13:12:52.065+02:00  INFO 48011 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.291 seconds (process running for 10.118)
2024-11-14T13:12:52.359+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T13:12:52.361+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T13:12:52.364+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T13:12:52.513+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T13:12:52.626+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T13:12:52.675+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:12:52.680+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:12:52.682+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:12:52.684+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:12:52.686+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:12:52.687+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:12:52.689+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:12:52.691+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:12:52.693+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:12:52.694+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:12:52.697+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:12:52.699+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:12:52.700+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:12:52.702+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:12:52.704+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:12:52.705+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:12:52.707+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:12:52.708+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:12:52.711+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:12:52.713+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:12:52.716+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T13:13:03.114+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:13:03.116+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:13:03.117+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:13:03.118+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:13:03.123+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:13:03.126+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:13:03.128+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:13:03.130+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:13:03.133+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:13:03.135+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:13:03.139+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:13:03.141+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:13:03.179+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:13:03.184+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:13:03.192+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:13:03.195+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:13:08.490+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:13:08.492+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:13:08.494+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:13:08.495+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:13:08.496+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:13:08.497+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:13:08.498+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:13:08.500+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:13:08.501+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:13:08.502+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:13:08.504+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:13:08.504+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:13:08.509+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:13:08.510+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:13:08.513+02:00 DEBUG 48011 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:13:08.518+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:13:08.529+02:00  INFO 48011 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T13:19:04.023+02:00  INFO 48011 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:19:04.026+02:00  INFO 48011 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T13:19:04.034+02:00  INFO 48011 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T13:19:05.700+02:00  INFO 50622 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 50622 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T13:19:05.704+02:00  INFO 50622 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T13:19:07.717+02:00  INFO 50622 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T13:19:07.833+02:00  INFO 50622 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 106 ms. Found 3 JPA repository interfaces.
2024-11-14T13:19:08.825+02:00  INFO 50622 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T13:19:08.843+02:00  INFO 50622 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T13:19:08.843+02:00  INFO 50622 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T13:19:08.916+02:00  INFO 50622 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T13:19:08.917+02:00  INFO 50622 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3158 ms
2024-11-14T13:19:09.476+02:00  INFO 50622 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T13:19:09.543+02:00  INFO 50622 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T13:19:09.584+02:00  INFO 50622 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T13:19:09.906+02:00  INFO 50622 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T13:19:09.942+02:00  INFO 50622 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T13:19:10.094+02:00  INFO 50622 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@27210a3b
2024-11-14T13:19:10.096+02:00  INFO 50622 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T13:19:11.150+02:00  INFO 50622 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T13:19:11.186+02:00  INFO 50622 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:19:11.647+02:00  INFO 50622 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T13:19:12.443+02:00  WARN 50622 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T13:19:13.722+02:00  INFO 50622 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T13:19:13.836+02:00  INFO 50622 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T13:19:13.860+02:00  INFO 50622 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 8.687 seconds (process running for 9.456)
2024-11-14T13:19:55.158+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T13:19:55.159+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T13:19:55.160+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-14T13:19:55.283+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:19:55.318+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:19:55.324+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:19:55.327+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:19:55.333+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:19:55.337+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:19:55.339+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:19:55.341+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:19:55.343+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:19:55.348+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:19:55.352+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:19:55.353+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:19:55.441+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:19:55.445+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:19:55.449+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:19:55.451+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:20:00.834+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:20:00.836+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:00.838+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:00.840+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:00.842+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:00.846+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:00.848+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:00.849+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:00.850+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:00.852+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:00.854+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:00.855+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:20:00.858+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:20:00.860+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:20:00.863+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:20:00.864+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:20:00.877+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T13:20:24.910+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T13:20:24.937+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T13:20:24.951+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:24.955+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:24.957+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:24.958+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:24.963+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:24.966+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:24.969+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:24.970+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:24.975+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:24.981+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:24.984+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:24.988+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:24.991+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:24.993+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:24.997+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:25.000+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:25.002+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:25.005+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:25.008+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:25.015+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:25.018+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T13:20:36.598+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:20:36.599+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:36.600+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:36.601+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:20:36.603+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:36.604+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:36.606+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:20:36.607+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:36.608+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:20:36.609+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:36.610+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:20:36.611+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:20:36.614+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:20:36.616+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:20:36.619+02:00 DEBUG 50622 --- [moviedb-api] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:20:36.620+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:20:36.621+02:00  INFO 50622 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Deleted movie with id: 1
2024-11-14T13:20:42.363+02:00  INFO 50622 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:20:42.370+02:00  INFO 50622 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T13:20:42.376+02:00  INFO 50622 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T13:24:50.148+02:00  INFO 52734 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 52734 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T13:24:50.151+02:00  INFO 52734 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T13:24:52.124+02:00  INFO 52734 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T13:24:52.237+02:00  INFO 52734 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 98 ms. Found 3 JPA repository interfaces.
2024-11-14T13:24:53.510+02:00  INFO 52734 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T13:24:53.532+02:00  INFO 52734 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T13:24:53.532+02:00  INFO 52734 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T13:24:53.613+02:00  INFO 52734 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T13:24:53.614+02:00  INFO 52734 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3368 ms
2024-11-14T13:24:54.159+02:00  INFO 52734 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T13:24:54.223+02:00  INFO 52734 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T13:24:54.279+02:00  INFO 52734 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T13:24:54.687+02:00  INFO 52734 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T13:24:54.729+02:00  INFO 52734 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T13:24:54.883+02:00  INFO 52734 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@3a0baec0
2024-11-14T13:24:54.885+02:00  INFO 52734 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T13:24:55.960+02:00  INFO 52734 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T13:24:56.002+02:00  INFO 52734 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:24:56.486+02:00  INFO 52734 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T13:24:57.366+02:00  WARN 52734 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T13:24:59.034+02:00  INFO 52734 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T13:24:59.231+02:00  INFO 52734 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T13:24:59.287+02:00  INFO 52734 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.657 seconds (process running for 10.626)
2024-11-14T13:25:01.811+02:00  INFO 52734 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T13:25:01.812+02:00  INFO 52734 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T13:25:01.813+02:00  INFO 52734 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-14T13:25:27.663+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T13:25:27.776+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T13:25:27.818+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:27.823+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:27.825+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:27.827+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:27.829+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:27.831+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:27.833+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:27.835+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:27.837+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:27.838+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:27.841+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:27.844+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:27.846+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:27.848+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:27.849+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:27.852+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:27.854+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:27.857+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:27.858+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:27.860+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:27.863+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T13:25:39.116+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:25:39.119+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:39.121+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:39.124+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:39.126+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:39.129+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:39.131+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:39.132+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:39.134+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:39.136+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:39.138+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:39.139+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:25:39.172+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:25:39.178+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:25:39.182+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:25:39.184+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:25:45.305+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T13:25:45.306+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:45.308+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:45.309+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:25:45.310+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:45.312+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:45.313+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:25:45.315+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:45.318+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:25:45.320+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:45.322+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:25:45.323+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T13:25:45.326+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.birth_date,
        a1_0.name 
    from
        actor a1_0 
    left join
        movie_actor m1_0 
            on a1_0.id=m1_0.actor_id 
    where
        m1_0.movie_id=?
2024-11-14T13:25:45.328+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:25:45.332+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    left join
        movie_genre m1_0 
            on g1_0.id=m1_0.genre_id 
    where
        m1_0.movie_id=?
2024-11-14T13:25:45.352+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T13:25:45.353+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Clearing actor associations for movie: 1
2024-11-14T13:25:45.354+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Clearing genre associations for movie: 1
2024-11-14T13:25:45.355+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Saving movie after clearing associations: 1
2024-11-14T13:25:45.360+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Deleting movie: 1
2024-11-14T13:25:45.365+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : Movie deleted successfully: 1
2024-11-14T13:26:21.748+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T13:26:21.751+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T13:26:21.752+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:26:21.754+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:26:21.755+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:26:21.756+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:26:21.758+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:26:21.760+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:26:21.767+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:26:21.768+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:26:21.770+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:26:21.772+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:26:21.773+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:26:21.774+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:26:21.775+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:26:21.776+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:26:21.780+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:26:21.783+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:26:21.786+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:26:21.790+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:26:21.791+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:26:21.793+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:26:21.795+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T13:28:28.395+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0
2024-11-14T13:28:28.397+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.398+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:28:28.399+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:28.400+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:28:28.404+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:28:28.405+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.406+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.407+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:28:28.408+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.413+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:28.415+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:28.417+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.418+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:28:28.420+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:28.421+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:28:28.425+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:28:28.426+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.427+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.428+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:28:28.430+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:28.433+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:28.435+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:28.436+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=drama, movies=[]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T13:28:36.699+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        g1_0.id=?
2024-11-14T13:28:36.703+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    left join
        movie_genre g1_0 
            on m1_0.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:28:49.098+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        g1_0.id=?
2024-11-14T13:28:49.100+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    left join
        movie_genre g1_0 
            on m1_0.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T13:28:49.104+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:28:49.105+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:49.106+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:28:49.107+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:49.108+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:28:49.109+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:28:49.110+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:49.111+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:28:49.116+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:49.117+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:28:49.119+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Deleting genre 1
2024-11-14T13:28:49.136+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    delete 
    from
        genre 
    where
        id=?
2024-11-14T13:29:28.208+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0
2024-11-14T13:29:28.210+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:29:28.211+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:29:28.212+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:29:28.214+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:29:28.215+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:29:28.216+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:29:28.218+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:29:28.219+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:29:28.221+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:29:28.222+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:29:28.223+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:29:28.225+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:29:28.228+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:29:28.229+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:29:28.230+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:29:28.231+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:29:28.232+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:29:28.233+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:29:28.234+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:29:28.235+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:29:28.237+02:00 DEBUG 52734 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:29:28.237+02:00  INFO 52734 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=crime, movies=[]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T13:51:29.949+02:00  INFO 52734 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:51:29.954+02:00  INFO 52734 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T13:51:29.969+02:00  INFO 52734 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T13:51:31.798+02:00  INFO 63501 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 63501 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T13:51:31.801+02:00  INFO 63501 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T13:51:33.596+02:00  INFO 63501 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T13:51:33.687+02:00  INFO 63501 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 82 ms. Found 3 JPA repository interfaces.
2024-11-14T13:51:34.956+02:00  INFO 63501 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T13:51:34.972+02:00  INFO 63501 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T13:51:34.973+02:00  INFO 63501 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T13:51:35.059+02:00  INFO 63501 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T13:51:35.061+02:00  INFO 63501 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3196 ms
2024-11-14T13:51:35.521+02:00  INFO 63501 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T13:51:35.585+02:00  INFO 63501 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T13:51:35.638+02:00  INFO 63501 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T13:51:36.059+02:00  INFO 63501 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T13:51:36.114+02:00  INFO 63501 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T13:51:36.263+02:00  INFO 63501 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@62808e9e
2024-11-14T13:51:36.266+02:00  INFO 63501 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T13:51:37.322+02:00  INFO 63501 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T13:51:37.363+02:00  INFO 63501 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:51:37.796+02:00  INFO 63501 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T13:51:38.688+02:00  WARN 63501 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T13:51:40.314+02:00  INFO 63501 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T13:51:40.423+02:00  INFO 63501 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T13:51:40.462+02:00  INFO 63501 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.212 seconds (process running for 10.067)
2024-11-14T13:55:54.834+02:00  INFO 63501 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:55:54.844+02:00  INFO 63501 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T13:55:54.849+02:00  INFO 63501 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T13:55:56.667+02:00  INFO 65112 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 65112 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T13:55:56.669+02:00  INFO 65112 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T13:55:58.597+02:00  INFO 65112 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T13:55:58.688+02:00  INFO 65112 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 3 JPA repository interfaces.
2024-11-14T13:55:59.774+02:00  INFO 65112 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T13:55:59.807+02:00  INFO 65112 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T13:55:59.808+02:00  INFO 65112 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T13:55:59.888+02:00  INFO 65112 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T13:55:59.890+02:00  INFO 65112 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3139 ms
2024-11-14T13:56:00.328+02:00  INFO 65112 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T13:56:00.420+02:00  INFO 65112 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T13:56:00.466+02:00  INFO 65112 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T13:56:00.938+02:00  INFO 65112 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T13:56:00.979+02:00  INFO 65112 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T13:56:01.162+02:00  INFO 65112 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@71df5f30
2024-11-14T13:56:01.166+02:00  INFO 65112 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T13:56:02.249+02:00  INFO 65112 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T13:56:02.284+02:00  INFO 65112 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T13:56:02.773+02:00  INFO 65112 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T13:56:03.878+02:00  WARN 65112 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T13:56:05.764+02:00  INFO 65112 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T13:56:05.994+02:00  INFO 65112 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T13:56:06.039+02:00  INFO 65112 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.933 seconds (process running for 10.814)
2024-11-14T13:56:11.238+02:00  INFO 65112 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T13:56:11.239+02:00  INFO 65112 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T13:56:11.241+02:00  INFO 65112 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T13:56:11.432+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.id,
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name,
        m1_0.duration,
        g1_0.movie_id,
        g1_1.id,
        g1_1.name,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    left join
        movie_actor a1_0 
            on m1_0.id=a1_0.movie_id 
    left join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    left join
        movie_genre g1_0 
            on m1_0.id=g1_0.movie_id 
    left join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        m1_0.id=?
2024-11-14T13:56:11.463+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:56:11.465+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:56:11.467+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:56:11.469+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:56:11.471+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:56:11.488+02:00  INFO 65112 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Generic exception: jakarta.servlet.ServletException: Handler dispatch failed: java.lang.StackOverflowError
2024-11-14T13:56:29.755+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name,
        m1_0.duration,
        g1_0.movie_id,
        g1_1.id,
        g1_1.name,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    left join
        movie_actor a1_0 
            on m1_0.id=a1_0.movie_id 
    left join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    left join
        movie_genre g1_0 
            on m1_0.id=g1_0.movie_id 
    left join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        m1_0.id=?
2024-11-14T13:56:29.758+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:56:29.759+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T13:56:29.761+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T13:56:29.762+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T13:56:29.764+02:00 DEBUG 65112 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T13:56:29.769+02:00  INFO 65112 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Generic exception: jakarta.servlet.ServletException: Handler dispatch failed: java.lang.StackOverflowError
2024-11-14T14:04:40.420+02:00  INFO 65112 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:04:40.425+02:00  INFO 65112 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:04:40.459+02:00  INFO 65112 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:04:42.259+02:00  INFO 68302 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 68302 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:04:42.262+02:00  INFO 68302 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:04:44.147+02:00  INFO 68302 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:04:44.266+02:00  INFO 68302 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 105 ms. Found 3 JPA repository interfaces.
2024-11-14T14:04:45.214+02:00  INFO 68302 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:04:45.232+02:00  INFO 68302 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:04:45.234+02:00  INFO 68302 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:04:45.303+02:00  INFO 68302 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:04:45.303+02:00  INFO 68302 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2977 ms
2024-11-14T14:04:45.717+02:00  INFO 68302 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:04:45.782+02:00  INFO 68302 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:04:45.824+02:00  INFO 68302 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:04:46.152+02:00  INFO 68302 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:04:46.188+02:00  INFO 68302 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:04:46.317+02:00  INFO 68302 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@5fafa76d
2024-11-14T14:04:46.320+02:00  INFO 68302 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:04:47.316+02:00  INFO 68302 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:04:47.358+02:00  INFO 68302 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:04:47.964+02:00  INFO 68302 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:04:48.880+02:00  WARN 68302 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:04:50.562+02:00  INFO 68302 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:04:50.672+02:00  INFO 68302 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T14:04:50.703+02:00  INFO 68302 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 8.97 seconds (process running for 9.859)
2024-11-14T14:04:54.194+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T14:04:54.195+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T14:04:54.197+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T14:04:54.359+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        m1_0.id=?
2024-11-14T14:04:54.399+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:04:54.408+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:04:54.415+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:04:54.420+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:04:54.423+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:04:54.426+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:04:54.429+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:04:54.432+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:04:54.435+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:04:54.438+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T14:04:54.440+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T14:04:54.450+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Deleting movie: 1
2024-11-14T14:04:54.460+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Movie deleted successfully: 1
2024-11-14T14:05:24.734+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T14:05:24.833+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    where
        1=1 
    order by
        m1_0.title 
    limit
        ? 
    offset
        ?
2024-11-14T14:05:24.842+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:05:24.852+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:05:24.853+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:05:24.854+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:05:24.856+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:05:24.860+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:05:24.862+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:05:24.866+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:05:24.868+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:05:24.878+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:05:24.880+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:05:24.881+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:05:24.885+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:05:24.888+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:05:24.897+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:05:24.898+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:05:24.904+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:05:24.905+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:05:24.907+02:00 DEBUG 68302 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:05:24.908+02:00  INFO 68302 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T14:20:15.372+02:00  INFO 68302 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:20:15.376+02:00  INFO 68302 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:20:15.383+02:00  INFO 68302 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:20:17.133+02:00  INFO 74709 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 74709 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:20:17.136+02:00  INFO 74709 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:20:19.034+02:00  INFO 74709 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:20:19.111+02:00  INFO 74709 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 68 ms. Found 3 JPA repository interfaces.
2024-11-14T14:20:20.130+02:00  INFO 74709 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:20:20.147+02:00  INFO 74709 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:20:20.148+02:00  INFO 74709 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:20:20.228+02:00  INFO 74709 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:20:20.228+02:00  INFO 74709 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3022 ms
2024-11-14T14:20:20.618+02:00  INFO 74709 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:20:20.687+02:00  INFO 74709 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:20:20.730+02:00  INFO 74709 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:20:21.036+02:00  INFO 74709 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:20:21.077+02:00  INFO 74709 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:20:21.226+02:00  INFO 74709 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@62808e9e
2024-11-14T14:20:21.228+02:00  INFO 74709 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:20:22.241+02:00  INFO 74709 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:20:22.279+02:00  INFO 74709 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:20:22.655+02:00  INFO 74709 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:20:23.157+02:00  WARN 74709 --- [moviedb-api] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'actorApiController' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/controller/ActorApiController.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'movieService' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/service/MovieService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'genreService' defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/service/GenreService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'movieService': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-11-14T14:20:23.158+02:00  INFO 74709 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:20:23.161+02:00  INFO 74709 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:20:23.165+02:00  INFO 74709 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:20:23.168+02:00  INFO 74709 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-11-14T14:20:23.192+02:00  INFO 74709 --- [moviedb-api] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-14T14:20:23.212+02:00 ERROR 74709 --- [moviedb-api] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

   actorApiController defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/controller/ActorApiController.class]
┌─────┐
|  movieService defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/service/MovieService.class]
↑     ↓
|  genreService defined in file [/home/kooduser/Documents/moviedb-api/target/classes/com/moviedb_api/service/GenreService.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-11-14T14:27:17.614+02:00  INFO 77665 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 77665 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:27:17.620+02:00  INFO 77665 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:27:19.650+02:00  INFO 77665 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:27:19.750+02:00  INFO 77665 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 78 ms. Found 3 JPA repository interfaces.
2024-11-14T14:27:20.855+02:00  INFO 77665 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:27:20.877+02:00  INFO 77665 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:27:20.878+02:00  INFO 77665 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:27:20.963+02:00  INFO 77665 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:27:20.963+02:00  INFO 77665 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3272 ms
2024-11-14T14:27:21.456+02:00  INFO 77665 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:27:21.522+02:00  INFO 77665 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:27:21.562+02:00  INFO 77665 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:27:21.909+02:00  INFO 77665 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:27:21.944+02:00  INFO 77665 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:27:22.103+02:00  INFO 77665 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@2e4339c1
2024-11-14T14:27:22.107+02:00  INFO 77665 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:27:23.206+02:00  INFO 77665 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:27:23.257+02:00  INFO 77665 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:27:23.674+02:00  INFO 77665 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:27:24.696+02:00  WARN 77665 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:27:26.504+02:00  INFO 77665 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T14:27:26.505+02:00  INFO 77665 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T14:27:26.516+02:00  INFO 77665 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:27:26.552+02:00  INFO 77665 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 46 ms
2024-11-14T14:27:26.705+02:00  INFO 77665 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T14:27:26.731+02:00  INFO 77665 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.706 seconds (process running for 10.506)
2024-11-14T14:28:24.125+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        g1_0.id=?
2024-11-14T14:28:30.569+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        g1_0.id=?
2024-11-14T14:28:30.594+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:28:30.597+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:28:30.601+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:28:30.602+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:28:30.605+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:28:30.607+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:28:30.608+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:28:30.610+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:28:30.618+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:28:30.620+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:28:30.622+02:00  INFO 77665 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Found genre: Genre(name=crime, movies=[])
2024-11-14T14:28:30.703+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    left join
        movie_genre g1_0 
            on m1_0.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T14:28:36.335+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.id,
        g1_0.name 
    from
        genre g1_0 
    where
        g1_0.id=?
2024-11-14T14:28:36.337+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:28:36.338+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:28:36.340+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:28:36.341+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.movie_id,
        a1_1.id,
        a1_1.birth_date,
        a1_1.name 
    from
        movie_actor a1_0 
    join
        actor a1_1 
            on a1_1.id=a1_0.actor_id 
    where
        a1_0.movie_id=?
2024-11-14T14:28:36.343+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:28:36.344+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:28:36.345+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_genre m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.genre_id=?
2024-11-14T14:28:36.346+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movie_genre g1_0 
    join
        genre g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-11-14T14:28:36.348+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:28:36.349+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.actor_id,
        m1_1.id,
        m1_1.duration,
        m1_1.release_year,
        m1_1.title 
    from
        movie_actor m1_0 
    join
        movie m1_1 
            on m1_1.id=m1_0.movie_id 
    where
        m1_0.actor_id=?
2024-11-14T14:28:36.350+02:00  INFO 77665 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.GenreService     : Found genre: Genre(name=crime, movies=[])
2024-11-14T14:28:36.353+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.duration,
        m1_0.release_year,
        m1_0.title 
    from
        movie m1_0 
    left join
        movie_genre g1_0 
            on m1_0.id=g1_0.movie_id 
    where
        g1_0.genre_id=?
2024-11-14T14:28:36.360+02:00  INFO 77665 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.GenreService     : Deleting genre 2
2024-11-14T14:28:36.381+02:00 DEBUG 77665 --- [moviedb-api] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    delete 
    from
        genre 
    where
        id=?
2024-11-14T14:29:54.071+02:00  INFO 78819 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 78819 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:29:54.077+02:00  INFO 78819 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:29:56.137+02:00  INFO 78819 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:29:56.244+02:00  INFO 78819 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95 ms. Found 3 JPA repository interfaces.
2024-11-14T14:29:57.426+02:00  INFO 78819 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:29:57.447+02:00  INFO 78819 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:29:57.448+02:00  INFO 78819 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:29:57.514+02:00  INFO 78819 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:29:57.515+02:00  INFO 78819 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3379 ms
2024-11-14T14:29:58.022+02:00  INFO 78819 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:29:58.095+02:00  INFO 78819 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:29:58.138+02:00  INFO 78819 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:29:58.490+02:00  INFO 78819 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:29:58.538+02:00  INFO 78819 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:29:58.728+02:00  INFO 78819 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@552088cc
2024-11-14T14:29:58.731+02:00  INFO 78819 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:30:00.092+02:00  INFO 78819 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:30:00.132+02:00  INFO 78819 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:30:00.626+02:00  INFO 78819 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:30:01.663+02:00  WARN 78819 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:30:03.245+02:00  INFO 78819 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:30:03.373+02:00  WARN 78819 --- [moviedb-api] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-11-14T14:30:03.382+02:00  INFO 78819 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:30:03.387+02:00  INFO 78819 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:30:03.392+02:00  INFO 78819 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:30:03.422+02:00  INFO 78819 --- [moviedb-api] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-14T14:30:03.444+02:00 ERROR 78819 --- [moviedb-api] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2024-11-14T14:30:13.005+02:00  INFO 77665 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:30:13.008+02:00  INFO 77665 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:30:13.013+02:00  INFO 77665 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:30:17.580+02:00  INFO 79119 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 79119 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:30:17.585+02:00  INFO 79119 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:30:19.477+02:00  INFO 79119 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:30:19.609+02:00  INFO 79119 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 112 ms. Found 3 JPA repository interfaces.
2024-11-14T14:30:21.010+02:00  INFO 79119 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:30:21.029+02:00  INFO 79119 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:30:21.030+02:00  INFO 79119 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:30:21.104+02:00  INFO 79119 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:30:21.105+02:00  INFO 79119 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3426 ms
2024-11-14T14:30:21.586+02:00  INFO 79119 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:30:21.642+02:00  INFO 79119 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:30:21.678+02:00  INFO 79119 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:30:21.973+02:00  INFO 79119 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:30:22.015+02:00  INFO 79119 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:30:22.180+02:00  INFO 79119 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@62dc1203
2024-11-14T14:30:22.183+02:00  INFO 79119 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:30:23.269+02:00  INFO 79119 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:30:23.312+02:00  INFO 79119 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:30:23.766+02:00  INFO 79119 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:30:24.910+02:00  WARN 79119 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:30:26.563+02:00  INFO 79119 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:30:26.700+02:00  INFO 79119 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T14:30:26.729+02:00  INFO 79119 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.735 seconds (process running for 10.618)
2024-11-14T14:30:29.407+02:00  INFO 79119 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T14:30:29.408+02:00  INFO 79119 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T14:30:29.413+02:00  INFO 79119 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2024-11-14T14:30:33.264+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T14:30:33.364+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T14:30:33.369+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T14:31:07.640+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Found movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])
2024-11-14T14:31:07.645+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=John Travolta, birthDate=1954-02-18, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T14:31:07.648+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T14:31:07.657+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Deleting movie: 1
2024-11-14T14:31:07.665+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Movie deleted successfully: 1
2024-11-14T14:31:12.543+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T14:31:12.600+02:00  INFO 79119 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T14:34:39.337+02:00  INFO 80868 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 80868 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:34:39.352+02:00  INFO 80868 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:34:41.605+02:00  INFO 80868 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:34:41.734+02:00  INFO 80868 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 118 ms. Found 3 JPA repository interfaces.
2024-11-14T14:34:42.906+02:00  INFO 80868 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:34:42.924+02:00  INFO 80868 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:34:42.926+02:00  INFO 80868 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:34:42.996+02:00  INFO 80868 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:34:42.997+02:00  INFO 80868 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3532 ms
2024-11-14T14:34:43.571+02:00  INFO 80868 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:34:43.646+02:00  INFO 80868 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:34:43.686+02:00  INFO 80868 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:34:44.079+02:00  INFO 80868 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:34:44.130+02:00  INFO 80868 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:34:44.315+02:00  INFO 80868 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@1786150f
2024-11-14T14:34:44.319+02:00  INFO 80868 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:34:45.654+02:00  INFO 80868 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:34:45.693+02:00  INFO 80868 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:34:46.176+02:00  INFO 80868 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:34:47.231+02:00  WARN 80868 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:34:48.999+02:00  INFO 80868 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:34:49.120+02:00  WARN 80868 --- [moviedb-api] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-11-14T14:34:49.127+02:00  INFO 80868 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:34:49.131+02:00  INFO 80868 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:34:49.137+02:00  INFO 80868 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:34:49.162+02:00  INFO 80868 --- [moviedb-api] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-14T14:34:49.186+02:00 ERROR 80868 --- [moviedb-api] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2024-11-14T14:34:53.707+02:00  INFO 79119 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:34:53.712+02:00  INFO 79119 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:34:53.718+02:00  INFO 79119 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:34:58.331+02:00  INFO 81153 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 81153 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:34:58.337+02:00  INFO 81153 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:35:00.476+02:00  INFO 81153 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:35:00.613+02:00  INFO 81153 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 126 ms. Found 3 JPA repository interfaces.
2024-11-14T14:35:01.859+02:00  INFO 81153 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:35:01.881+02:00  INFO 81153 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:35:01.882+02:00  INFO 81153 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:35:01.988+02:00  INFO 81153 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:35:01.990+02:00  INFO 81153 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3589 ms
2024-11-14T14:35:02.551+02:00  INFO 81153 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:35:02.617+02:00  INFO 81153 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:35:02.662+02:00  INFO 81153 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:35:03.051+02:00  INFO 81153 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:35:03.100+02:00  INFO 81153 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:35:03.244+02:00  INFO 81153 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@5ebe903a
2024-11-14T14:35:03.246+02:00  INFO 81153 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:35:04.255+02:00  INFO 81153 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:35:04.294+02:00  INFO 81153 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:35:04.813+02:00  INFO 81153 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:35:05.648+02:00  WARN 81153 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:35:07.341+02:00  INFO 81153 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:35:07.488+02:00  INFO 81153 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T14:35:07.508+02:00  INFO 81153 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.708 seconds (process running for 10.551)
2024-11-14T14:35:10.146+02:00  INFO 81153 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T14:35:10.147+02:00  INFO 81153 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T14:35:10.149+02:00  INFO 81153 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T14:44:51.836+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29), ActorCreateDto(name=John Travolta, birthDate=1954-02-18), ActorCreateDto(name=Samuel L. Jackson, birthDate=1948-12-21)], genres=[CreateOrPatchGenreDto(name=Drama), CreateOrPatchGenreDto(name=Crime), CreateOrPatchGenreDto(name=Gangster)], actorIds=null, genreIds=null)
2024-11-14T14:44:51.848+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[ActorCreateDto(name=Uma Thurman, birthDate=1970-04-29), ActorCreateDto(name=John Travolta, birthDate=1954-02-18), ActorCreateDto(name=Samuel L. Jackson, birthDate=1948-12-21)], genres=[CreateOrPatchGenreDto(name=Drama), CreateOrPatchGenreDto(name=Crime), CreateOrPatchGenreDto(name=Gangster)], actorIds=null, genreIds=null)
2024-11-14T14:44:51.955+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Finding or creating actor: Uma Thurman
2024-11-14T14:44:52.003+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[])]
2024-11-14T14:44:52.005+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Finding or creating actor: John Travolta
2024-11-14T14:44:52.025+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=John Travolta, birthDate=1954-02-18, movies=[])]
2024-11-14T14:44:52.027+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Finding or creating actor: Samuel L. Jackson
2024-11-14T14:44:52.035+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])]
2024-11-14T14:44:52.037+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Finding or creating genre: drama
2024-11-14T14:44:52.052+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T14:44:52.097+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Finding or creating genre: crime
2024-11-14T14:44:52.104+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T14:44:52.108+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Finding or creating genre: gangster
2024-11-14T14:44:52.116+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=gangster, movies=[])]
2024-11-14T14:44:52.117+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])], genres=[Genre(name=gangster, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[])])
2024-11-14T14:44:52.126+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Saved movie data: Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])], genres=[Genre(name=gangster, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[])])
2024-11-14T14:55:07.672+02:00  INFO 81153 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "{id}"
2024-11-14T14:57:23.488+02:00  INFO 81153 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:57:23.493+02:00  INFO 81153 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:57:23.509+02:00  INFO 81153 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:57:25.437+02:00  INFO 90066 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 90066 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:57:25.440+02:00  INFO 90066 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:57:27.181+02:00  INFO 90066 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:57:27.297+02:00  INFO 90066 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 3 JPA repository interfaces.
2024-11-14T14:57:28.588+02:00  INFO 90066 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:57:28.612+02:00  INFO 90066 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:57:28.614+02:00  INFO 90066 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:57:28.697+02:00  INFO 90066 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:57:28.698+02:00  INFO 90066 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3193 ms
2024-11-14T14:57:29.205+02:00  INFO 90066 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:57:29.279+02:00  INFO 90066 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:57:29.320+02:00  INFO 90066 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:57:29.773+02:00  INFO 90066 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:57:29.833+02:00  INFO 90066 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:57:30.058+02:00  INFO 90066 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@595184d8
2024-11-14T14:57:30.062+02:00  INFO 90066 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:57:31.272+02:00  INFO 90066 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:57:31.314+02:00  INFO 90066 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:57:31.719+02:00  INFO 90066 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:57:32.707+02:00  WARN 90066 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:57:34.379+02:00  INFO 90066 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:57:34.619+02:00  INFO 90066 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T14:57:34.649+02:00  INFO 90066 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.74 seconds (process running for 10.595)
2024-11-14T14:57:34.677+02:00  INFO 90066 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:57:34.682+02:00  INFO 90066 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T14:57:34.693+02:00  INFO 90066 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T14:57:51.049+02:00  INFO 90345 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 90345 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T14:57:51.054+02:00  INFO 90345 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T14:57:52.951+02:00  INFO 90345 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T14:57:53.069+02:00  INFO 90345 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 106 ms. Found 3 JPA repository interfaces.
2024-11-14T14:57:54.310+02:00  INFO 90345 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T14:57:54.338+02:00  INFO 90345 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T14:57:54.339+02:00  INFO 90345 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T14:57:54.404+02:00  INFO 90345 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T14:57:54.405+02:00  INFO 90345 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3253 ms
2024-11-14T14:57:54.994+02:00  INFO 90345 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T14:57:55.063+02:00  INFO 90345 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T14:57:55.112+02:00  INFO 90345 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T14:57:55.453+02:00  INFO 90345 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T14:57:55.501+02:00  INFO 90345 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T14:57:55.649+02:00  INFO 90345 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@390a7532
2024-11-14T14:57:55.652+02:00  INFO 90345 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T14:57:56.807+02:00  INFO 90345 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T14:57:56.848+02:00  INFO 90345 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T14:57:57.344+02:00  INFO 90345 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T14:57:58.470+02:00  WARN 90345 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T14:58:00.214+02:00  INFO 90345 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T14:58:00.371+02:00  INFO 90345 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T14:58:00.396+02:00  INFO 90345 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.924 seconds (process running for 10.839)
2024-11-14T14:58:02.824+02:00  INFO 90345 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T14:58:02.826+02:00  INFO 90345 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T14:58:02.830+02:00  INFO 90345 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T14:58:07.994+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=gangster, movies=[]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T14:58:15.914+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T14:58:16.006+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T14:58:16.014+02:00  WARN 90345 --- [moviedb-api] [http-nio-8080-exec-3] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-11-14T14:58:37.716+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=lord, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T14:58:37.746+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T14:58:44.688+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T14:58:44.720+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T15:11:19.800+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'movieId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "{movieId}"
2024-11-14T15:19:46.113+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/v1/movie/2/genres.
2024-11-14T15:19:46.114+02:00  WARN 90345 --- [moviedb-api] [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Failure in @ExceptionHandler com.moviedb_api.exception.GlobalExceptionHandler#handleGenericException(Exception)

java.lang.NullPointerException: Cannot invoke "java.lang.Throwable.toString()" because the return value of "java.lang.Exception.getCause()" is null
	at com.moviedb_api.exception.GlobalExceptionHandler.handleGenericException(GlobalExceptionHandler.java:90) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1358) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1161) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.31.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.31.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-11-14T15:20:47.375+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.ActorService     : ActorController: getting actor's movies. Actor id: 2
2024-11-14T15:20:47.376+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=2, page=0, size=10, sortBy=title)
2024-11-14T15:20:47.397+02:00  INFO 90345 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T15:30:03.480+02:00  INFO 90345 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:30:03.486+02:00  INFO 90345 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T15:30:03.497+02:00  INFO 90345 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T15:30:06.533+02:00  INFO 104618 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 104618 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T15:30:06.537+02:00  INFO 104618 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T15:30:08.587+02:00  INFO 104618 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T15:30:08.690+02:00  INFO 104618 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 92 ms. Found 3 JPA repository interfaces.
2024-11-14T15:30:10.083+02:00  INFO 104618 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T15:30:10.104+02:00  INFO 104618 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T15:30:10.105+02:00  INFO 104618 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T15:30:10.274+02:00  INFO 104618 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T15:30:10.275+02:00  INFO 104618 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3671 ms
2024-11-14T15:30:10.718+02:00  INFO 104618 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T15:30:10.788+02:00  INFO 104618 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T15:30:10.827+02:00  INFO 104618 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T15:30:11.142+02:00  INFO 104618 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T15:30:11.183+02:00  INFO 104618 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T15:30:11.336+02:00  INFO 104618 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@595184d8
2024-11-14T15:30:11.339+02:00  INFO 104618 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T15:30:12.400+02:00  INFO 104618 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T15:30:12.446+02:00  INFO 104618 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:30:12.820+02:00  INFO 104618 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T15:30:13.655+02:00  WARN 104618 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T15:30:15.223+02:00  INFO 104618 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T15:30:15.357+02:00  INFO 104618 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T15:30:15.380+02:00  INFO 104618 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.417 seconds (process running for 10.234)
2024-11-14T15:30:18.615+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T15:30:18.616+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T15:30:18.618+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-14T15:30:18.798+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T15:30:18.882+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T15:30:33.018+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actor: Actor(name=John Travolta, birthDate=1954-02-18, movies=[])
2024-11-14T15:30:33.024+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actors: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T15:30:43.681+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T15:30:43.685+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T15:30:54.996+02:00  INFO 104618 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Generic exception: org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/v1/movie/2/genres.
2024-11-14T15:30:54.997+02:00  WARN 104618 --- [moviedb-api] [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Failure in @ExceptionHandler com.moviedb_api.exception.GlobalExceptionHandler#handleGenericException(Exception)

java.lang.NullPointerException: Cannot invoke "java.lang.Throwable.toString()" because the return value of "java.lang.Exception.getCause()" is null
	at com.moviedb_api.exception.GlobalExceptionHandler.handleGenericException(GlobalExceptionHandler.java:90) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1358) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1161) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.31.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.14.jar:6.1.14]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.31.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.14.jar:6.1.14]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.14.jar:6.1.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.31.jar:10.1.31]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-11-14T15:35:32.351+02:00  INFO 104618 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:35:32.357+02:00  INFO 104618 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T15:35:32.366+02:00  INFO 104618 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T15:35:34.223+02:00  INFO 107242 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 107242 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T15:35:34.227+02:00  INFO 107242 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T15:35:36.070+02:00  INFO 107242 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T15:35:36.180+02:00  INFO 107242 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 3 JPA repository interfaces.
2024-11-14T15:35:37.363+02:00  INFO 107242 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T15:35:37.382+02:00  INFO 107242 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T15:35:37.383+02:00  INFO 107242 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T15:35:37.467+02:00  INFO 107242 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T15:35:37.468+02:00  INFO 107242 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3156 ms
2024-11-14T15:35:37.920+02:00  INFO 107242 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T15:35:37.978+02:00  INFO 107242 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T15:35:38.016+02:00  INFO 107242 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T15:35:38.320+02:00  INFO 107242 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T15:35:38.357+02:00  INFO 107242 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T15:35:38.496+02:00  INFO 107242 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@84a9f65
2024-11-14T15:35:38.498+02:00  INFO 107242 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T15:35:39.747+02:00  INFO 107242 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T15:35:39.794+02:00  INFO 107242 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:35:40.364+02:00  INFO 107242 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T15:35:41.259+02:00  WARN 107242 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T15:35:42.811+02:00  INFO 107242 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T15:35:42.931+02:00  INFO 107242 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T15:35:42.959+02:00  INFO 107242 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.324 seconds (process running for 10.129)
2024-11-14T15:35:54.899+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T15:35:54.900+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T15:35:54.903+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-14T15:35:55.102+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T15:35:55.159+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.MovieService     : Found actors: [Genre(name=action, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T15:36:02.049+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T15:36:02.054+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T15:36:05.911+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T15:36:05.915+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : Found actors: [Genre(name=action, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T15:36:17.196+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T15:36:17.255+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T15:36:17.261+02:00  WARN 107242 --- [moviedb-api] [http-nio-8080-exec-6] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-11-14T15:36:21.560+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=gangster, movies=[]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T15:36:26.326+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=null, birthDate=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T15:36:26.387+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : getActorsByFilter result data: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T15:36:58.826+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.GenreService     : Getting all genres:[Genre(name=gangster, movies=[]), Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T15:39:06.792+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : GenreController: getting genre's movies. Genre id: 4
2024-11-14T15:39:06.793+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=4, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T15:39:06.816+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T15:47:48.435+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : GenreController: getting genre's movies. Genre id: 4
2024-11-14T15:47:48.435+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=4, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T15:47:48.451+02:00  INFO 107242 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T15:51:33.867+02:00  INFO 107242 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:51:33.871+02:00  INFO 107242 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T15:51:33.877+02:00  INFO 107242 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T15:51:37.265+02:00  INFO 114523 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 114523 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T15:51:37.270+02:00  INFO 114523 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T15:51:39.250+02:00  INFO 114523 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T15:51:39.351+02:00  INFO 114523 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 3 JPA repository interfaces.
2024-11-14T15:51:40.736+02:00  INFO 114523 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T15:51:40.755+02:00  INFO 114523 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T15:51:40.756+02:00  INFO 114523 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T15:51:40.846+02:00  INFO 114523 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T15:51:40.847+02:00  INFO 114523 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3509 ms
2024-11-14T15:51:41.353+02:00  INFO 114523 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T15:51:41.420+02:00  INFO 114523 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T15:51:41.463+02:00  INFO 114523 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T15:51:41.804+02:00  INFO 114523 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T15:51:41.851+02:00  INFO 114523 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T15:51:42.001+02:00  INFO 114523 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@3164d5aa
2024-11-14T15:51:42.005+02:00  INFO 114523 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T15:51:43.291+02:00  INFO 114523 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T15:51:43.332+02:00  INFO 114523 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:51:43.935+02:00  INFO 114523 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T15:51:45.370+02:00  WARN 114523 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T15:51:47.196+02:00  INFO 114523 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T15:51:47.338+02:00  INFO 114523 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T15:51:47.366+02:00  INFO 114523 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 10.696 seconds (process running for 11.488)
2024-11-14T15:51:49.118+02:00  INFO 114523 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T15:51:49.119+02:00  INFO 114523 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T15:51:49.121+02:00  INFO 114523 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-14T15:52:38.209+02:00  INFO 115102 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 115102 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T15:52:38.213+02:00  INFO 115102 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T15:52:39.898+02:00  INFO 114523 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:52:39.906+02:00  INFO 114523 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T15:52:39.922+02:00  INFO 114523 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T15:52:40.289+02:00  INFO 115102 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T15:52:40.374+02:00  INFO 115102 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 72 ms. Found 3 JPA repository interfaces.
2024-11-14T15:52:41.813+02:00  INFO 115102 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T15:52:41.954+02:00  INFO 115102 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3677 ms
2024-11-14T15:52:42.717+02:00  INFO 115102 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T15:52:42.801+02:00  INFO 115102 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T15:52:42.857+02:00  INFO 115102 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T15:52:43.313+02:00  INFO 115102 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T15:52:43.354+02:00  INFO 115102 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T15:52:43.546+02:00  INFO 115102 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@390a7532
2024-11-14T15:52:43.552+02:00  INFO 115102 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T15:52:44.335+02:00  INFO 115227 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 115227 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T15:52:44.340+02:00  INFO 115227 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T15:52:45.250+02:00  INFO 115102 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T15:52:45.301+02:00  INFO 115102 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:52:46.129+02:00  INFO 115102 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T15:52:47.942+02:00  WARN 115102 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T15:52:48.434+02:00  INFO 115227 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T15:52:48.621+02:00  INFO 115227 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 161 ms. Found 3 JPA repository interfaces.
2024-11-14T15:52:50.800+02:00  INFO 115227 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T15:52:50.849+02:00  INFO 115227 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T15:52:50.850+02:00  INFO 115227 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T15:52:50.992+02:00  INFO 115102 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T15:52:51.017+02:00  INFO 115227 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T15:52:51.017+02:00  INFO 115227 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 6489 ms
2024-11-14T15:52:51.296+02:00  INFO 115102 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T15:52:51.345+02:00  INFO 115102 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 13.78 seconds (process running for 14.531)
2024-11-14T15:52:51.399+02:00  INFO 115102 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:52:51.412+02:00  INFO 115102 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T15:52:51.433+02:00  INFO 115102 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T15:52:51.771+02:00  INFO 115227 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T15:52:51.848+02:00  INFO 115227 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T15:52:51.898+02:00  INFO 115227 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T15:52:52.273+02:00  INFO 115227 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T15:52:52.306+02:00  INFO 115227 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T15:52:52.501+02:00  INFO 115227 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@14499b52
2024-11-14T15:52:52.504+02:00  INFO 115227 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T15:52:53.580+02:00  INFO 115227 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T15:52:53.621+02:00  INFO 115227 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T15:52:54.115+02:00  INFO 115227 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T15:52:55.117+02:00  WARN 115227 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T15:52:56.623+02:00  INFO 115227 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T15:52:56.789+02:00  INFO 115227 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T15:52:56.828+02:00  INFO 115227 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 13.506 seconds (process running for 14.99)
2024-11-14T15:52:57.308+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T15:52:57.312+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T15:52:57.317+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2024-11-14T15:52:57.508+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found Genre: Genre(name=action, movies=[])
2024-11-14T15:52:57.580+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : Found Genres: [Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T15:53:02.630+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : getGenreById data: Genre(name=adventure, movies=[])
2024-11-14T15:53:06.391+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.GenreService     : getGenresByFilter filter: GenreFilterDto(name=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T15:53:06.475+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.GenreService     : getGenresByFilter result data: [Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T15:53:06.484+02:00  WARN 115227 --- [moviedb-api] [http-nio-8080-exec-4] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-11-14T15:54:58.079+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.GenreService     : getGenresByFilter filter: GenreFilterDto(name=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T15:54:58.108+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.GenreService     : getGenresByFilter result data: [Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T15:55:04.640+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.GenreService     : getGenreById data: Genre(name=adventure, movies=[])
2024-11-14T15:55:10.404+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Found Genre: Genre(name=action, movies=[])
2024-11-14T15:55:10.407+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Found Genres: [Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T15:55:26.432+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: drama
2024-11-14T15:55:26.465+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=drama, movies=[])]
2024-11-14T15:55:26.466+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: animation
2024-11-14T15:55:26.471+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T15:55:26.540+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: family
2024-11-14T15:55:26.543+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T15:55:26.555+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: action
2024-11-14T15:55:26.576+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=action, movies=[])]
2024-11-14T15:55:26.577+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: sci-fi
2024-11-14T15:55:26.580+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T15:55:26.595+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: comedy
2024-11-14T15:55:26.598+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T15:55:26.610+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: adventure
2024-11-14T15:55:26.614+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T15:55:26.614+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: crime
2024-11-14T15:55:26.617+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=crime, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T15:55:26.617+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Finding or creating genre: thriller
2024-11-14T15:55:26.620+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.GenreService     : Found genre: Optional.empty
2024-11-14T15:55:45.087+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : getGenresByFilter filter: GenreFilterDto(name=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T15:55:45.115+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : getGenresByFilter result data: [Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=animation, movies=[]), Genre(name=comedy, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=family, movies=[]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=sci-fi, movies=[]), Genre(name=thriller, movies=[])]
2024-11-14T15:56:49.401+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.GenreService     : getGenresByFilter filter: GenreFilterDto(name=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T15:56:49.435+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.GenreService     : getGenresByFilter result data: [Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=animation, movies=[]), Genre(name=comedy, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=family, movies=[]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=gangster, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=sci-fi, movies=[]), Genre(name=thriller, movies=[])]
2024-11-14T15:57:32.519+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.GenreService     : Found genre: Genre(name=gangster, movies=[])
2024-11-14T15:57:37.189+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Found genre: Genre(name=gangster, movies=[])
2024-11-14T15:57:37.197+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.GenreService     : Deleting genre 3
2024-11-14T15:57:48.170+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=null, birthDate=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T15:57:48.197+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-10] com.moviedb_api.service.ActorService     : getActorsByFilter result data: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=John Travolta, birthDate=1954-02-18, movies=[]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T15:57:54.472+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[])
2024-11-14T15:58:00.358+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actor: Actor(name=John Travolta, birthDate=1954-02-18, movies=[])
2024-11-14T15:58:00.362+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : Found actors: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T15:58:19.667+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.ActorService     : Saved actor: Actor(name=New Actor, birthDate=1970-04-29, movies=[])
2024-11-14T15:58:45.183+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : getActorById data: Actor(name=John Travolta, birthDate=1954-02-18, movies=[])
2024-11-14T15:59:42.710+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=null, birthDate=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T15:59:42.729+02:00  INFO 115227 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.ActorService     : getActorsByFilter result data: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=New Actor, birthDate=1970-04-29, movies=[]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T16:04:21.296+02:00  INFO 115227 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T16:04:21.300+02:00  INFO 115227 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T16:04:21.308+02:00  INFO 115227 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T16:10:41.544+02:00  INFO 123799 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 123799 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T16:10:41.548+02:00  INFO 123799 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T16:10:43.524+02:00  INFO 123799 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T16:10:43.610+02:00  INFO 123799 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 77 ms. Found 3 JPA repository interfaces.
2024-11-14T16:10:44.730+02:00  INFO 123799 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T16:10:44.747+02:00  INFO 123799 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T16:10:44.748+02:00  INFO 123799 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T16:10:44.815+02:00  INFO 123799 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T16:10:44.817+02:00  INFO 123799 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3195 ms
2024-11-14T16:10:45.342+02:00  INFO 123799 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T16:10:45.401+02:00  INFO 123799 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T16:10:45.439+02:00  INFO 123799 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T16:10:45.765+02:00  INFO 123799 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T16:10:45.808+02:00  INFO 123799 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T16:10:45.965+02:00  INFO 123799 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@6df31abf
2024-11-14T16:10:45.968+02:00  INFO 123799 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T16:10:47.059+02:00  INFO 123799 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T16:10:47.105+02:00  INFO 123799 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T16:10:47.539+02:00  INFO 123799 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T16:10:48.429+02:00  WARN 123799 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T16:10:49.952+02:00  INFO 123799 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T16:10:50.129+02:00  INFO 123799 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T16:10:50.196+02:00  INFO 123799 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.182 seconds (process running for 10.046)
2024-11-14T16:10:50.428+02:00  INFO 123799 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T16:10:50.429+02:00  INFO 123799 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T16:10:50.431+02:00  INFO 123799 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-14T16:10:52.447+02:00  INFO 123799 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=null, birthDate=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T16:10:52.646+02:00  INFO 123799 --- [moviedb-api] [http-nio-8080-exec-1] com.moviedb_api.service.ActorService     : getActorsByFilter result data: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=New Actor, birthDate=1970-04-29, movies=[]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T16:10:52.655+02:00  WARN 123799 --- [moviedb-api] [http-nio-8080-exec-1] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-11-14T16:18:13.360+02:00  INFO 123799 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T16:18:13.364+02:00  INFO 123799 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T16:18:13.368+02:00  INFO 123799 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-14T16:18:16.227+02:00  INFO 126753 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Starting MoviedbApiApplication using Java 21.0.5 with PID 126753 (/home/kooduser/Documents/moviedb-api/target/classes started by kooduser in /home/kooduser/Documents/moviedb-api)
2024-11-14T16:18:16.237+02:00  INFO 126753 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-11-14T16:18:18.030+02:00  INFO 126753 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-14T16:18:18.126+02:00  INFO 126753 --- [moviedb-api] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 78 ms. Found 3 JPA repository interfaces.
2024-11-14T16:18:19.357+02:00  INFO 126753 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-14T16:18:19.374+02:00  INFO 126753 --- [moviedb-api] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-14T16:18:19.375+02:00  INFO 126753 --- [moviedb-api] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-14T16:18:19.462+02:00  INFO 126753 --- [moviedb-api] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-14T16:18:19.463+02:00  INFO 126753 --- [moviedb-api] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3157 ms
2024-11-14T16:18:20.176+02:00  INFO 126753 --- [moviedb-api] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-14T16:18:20.249+02:00  INFO 126753 --- [moviedb-api] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-14T16:18:20.312+02:00  INFO 126753 --- [moviedb-api] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-14T16:18:20.654+02:00  INFO 126753 --- [moviedb-api] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-14T16:18:20.711+02:00  INFO 126753 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-14T16:18:20.915+02:00  INFO 126753 --- [moviedb-api] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@5fafa76d
2024-11-14T16:18:20.919+02:00  INFO 126753 --- [moviedb-api] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-14T16:18:22.007+02:00  INFO 126753 --- [moviedb-api] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-14T16:18:22.053+02:00  INFO 126753 --- [moviedb-api] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T16:18:22.568+02:00  INFO 126753 --- [moviedb-api] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-14T16:18:23.582+02:00  WARN 126753 --- [moviedb-api] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-14T16:18:25.361+02:00  INFO 126753 --- [moviedb-api] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-11-14T16:18:25.514+02:00  INFO 126753 --- [moviedb-api] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-11-14T16:18:25.536+02:00  INFO 126753 --- [moviedb-api] [main] com.moviedb_api.MoviedbApiApplication    : Started MoviedbApiApplication in 9.865 seconds (process running for 10.674)
2024-11-14T16:18:28.034+02:00  INFO 126753 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-14T16:18:28.035+02:00  INFO 126753 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-14T16:18:28.038+02:00  INFO 126753 --- [moviedb-api] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-11-14T16:18:32.102+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : getGenresByFilter filter: GenreFilterDto(name=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T16:18:32.289+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.GenreService     : getGenresByFilter result data: [Genre(name=action, movies=[]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=animation, movies=[]), Genre(name=comedy, movies=[]), Genre(name=crime, movies=[]), Genre(name=drama, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]), Genre(name=family, movies=[]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=sci-fi, movies=[]), Genre(name=thriller, movies=[])]
2024-11-14T16:18:32.304+02:00  WARN 126753 --- [moviedb-api] [http-nio-8080-exec-2] ration$PageModule$WarningLoggingModifier : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-11-14T16:18:37.360+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.ActorService     : getActorsByFilter filter: ActorFilterDto(name=null, birthDate=null, movieId=null, page=0, size=30, sortBy=name)
2024-11-14T16:18:37.390+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.ActorService     : getActorsByFilter result data: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=New Actor, birthDate=1970-04-29, movies=[]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[]), Actor(name=Uma Thurman, birthDate=1970-04-29, movies=[Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])])]
2024-11-14T16:18:56.585+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T16:18:56.615+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[]), Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]
2024-11-14T16:19:19.061+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-5] com.moviedb_api.service.ActorService     : Found actor: Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])
2024-11-14T16:19:30.075+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Found actor: Actor(name=Samuel L. Jackson, birthDate=1948-12-21, movies=[])
2024-11-14T16:19:30.087+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.ActorService     : Deleting actor 3
2024-11-14T16:19:56.106+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T16:19:56.112+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:19:56.117+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-9] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=action, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:20:00.865+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T16:20:00.869+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:20:00.873+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=action, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:20:00.879+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Deleting movie: 2
2024-11-14T16:20:00.880+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-2] com.moviedb_api.service.MovieService     : Movie deleted successfully: 2
2024-11-14T16:20:12.075+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T16:20:12.084+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-4] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T16:20:21.240+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[ActorCreateDto(name=Elijah Wood, birthDate=1981-01-28), ActorCreateDto(name=Ian McKellen, birthDate=1939-05-25), ActorCreateDto(name=Orlando Bloom, birthDate=1977-01-13)], genres=[CreateOrPatchGenreDto(name=Action), CreateOrPatchGenreDto(name=Adventure), CreateOrPatchGenreDto(name=Fantasy)], actorIds=null, genreIds=null)
2024-11-14T16:20:21.241+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Creating new movie with input: MovieCreateDto(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[ActorCreateDto(name=Elijah Wood, birthDate=1981-01-28), ActorCreateDto(name=Ian McKellen, birthDate=1939-05-25), ActorCreateDto(name=Orlando Bloom, birthDate=1977-01-13)], genres=[CreateOrPatchGenreDto(name=Action), CreateOrPatchGenreDto(name=Adventure), CreateOrPatchGenreDto(name=Fantasy)], actorIds=null, genreIds=null)
2024-11-14T16:20:21.247+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Finding or creating actor: Elijah Wood
2024-11-14T16:20:21.256+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[])]
2024-11-14T16:20:21.257+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Finding or creating actor: Ian McKellen
2024-11-14T16:20:21.262+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[])]
2024-11-14T16:20:21.262+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Finding or creating actor: Orlando Bloom
2024-11-14T16:20:21.266+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.ActorService     : Found actor: Optional[Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[])]
2024-11-14T16:20:21.267+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Finding or creating genre: action
2024-11-14T16:20:21.278+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=action, movies=[])]
2024-11-14T16:20:21.278+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Finding or creating genre: adventure
2024-11-14T16:20:21.283+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=adventure, movies=[])]
2024-11-14T16:20:21.284+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Finding or creating genre: fantasy
2024-11-14T16:20:21.288+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.GenreService     : Found genre: Optional[Genre(name=fantasy, movies=[])]
2024-11-14T16:20:21.288+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Saving movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[]), Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[])], genres=[Genre(name=action, movies=[]), Genre(name=adventure, movies=[]), Genre(name=fantasy, movies=[])])
2024-11-14T16:20:21.308+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-3] com.moviedb_api.service.MovieService     : Saved movie data: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[]), Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[])], genres=[Genre(name=action, movies=[]), Genre(name=adventure, movies=[]), Genre(name=fantasy, movies=[])])
2024-11-14T16:20:31.404+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T16:20:31.408+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:20:31.417+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-6] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=action, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:20:38.927+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.MovieService     : Found movie: Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])
2024-11-14T16:20:38.931+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.MovieService     : Found actors: [Actor(name=Elijah Wood, birthDate=1981-01-28, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Ian McKellen, birthDate=1939-05-25, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Actor(name=Orlando Bloom, birthDate=1977-01-13, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:20:38.936+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.MovieService     : Found genres: [Genre(name=action, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=adventure, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])]), Genre(name=fantasy, movies=[Movie(title=The Lord of the Rings: The Fellowship of the Ring, releaseYear=2001, duration=178, actors=[], genres=[])])]
2024-11-14T16:20:38.938+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.MovieService     : Deleting movie: 4
2024-11-14T16:20:38.939+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-7] com.moviedb_api.service.MovieService     : Movie deleted successfully: 4
2024-11-14T16:20:45.015+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : getMoviesByFilter filter: MovieFilterDto(title=null, genreId=null, year=null, actorId=null, page=0, size=10, sortBy=title)
2024-11-14T16:20:45.025+02:00  INFO 126753 --- [moviedb-api] [http-nio-8080-exec-8] com.moviedb_api.service.MovieService     : getMoviesByFilter result data: [Movie(title=Pulp Fiction, releaseYear=1994, duration=154, actors=[], genres=[])]
2024-11-14T16:24:19.658+02:00  INFO 126753 --- [moviedb-api] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-14T16:24:19.663+02:00  INFO 126753 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-14T16:24:19.669+02:00  INFO 126753 --- [moviedb-api] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
